{"version":3,"sources":["unipept-visualizations.js"],"names":[],"mappings":"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","file":"unipept-visualizations.es5.js","sourcesContent":["/**\n * Zoomable treeview, inspiration from\n * - http://bl.ocks.org/mbostock/4339083\n * - https://gist.github.com/robschmuecker/7880033\n * - http://www.brightpointinc.com/interactive/budget/index.html?source=d3js\n */\n(function () {\n    var TreeView = function TreeView(element, options) {\n        let that = {};\n\n        const MARGIN = {\n                top: 5,\n                right: 5,\n                bottom: 5,\n                left: 5\n            },\n            DURATION = 750;\n\n        let width,\n            height;\n\n        let rightClicked,\n            tooltipTimer;\n\n        let nodeId = 0,\n            root;\n\n        let tree,\n            tooltip,\n            numberFormat,\n            diagonal,\n            widthScale,\n            arcScale,\n            innerArc,\n            zoomListener,\n            svg;\n\n        function init() {\n            width = options.width - MARGIN.right - MARGIN.left;\n            height = options.height - MARGIN.top - MARGIN.bottom;\n\n            numberFormat = d3.format(\",d\");\n\n            tooltip = d3.select(\"body\")\n                .append(\"div\")\n                .attr(\"id\", element.id + \"-tooltip\")\n                .attr(\"class\", \"tip\")\n                .style(\"position\", \"absolute\")\n                .style(\"z-index\", \"10\")\n                .style(\"visibility\", \"hidden\");\n\n            tree = d3.layout.tree()\n                .nodeSize([2, 10])\n                .separation((a, b) => {\n                    let width = (nodeSize(a) + nodeSize(b)),\n                        distance = width / 2 + 4;\n                    return (a.parent === b.parent) ? distance : distance + 4;\n                });\n\n            diagonal = d3.svg.diagonal().projection(d => [d.y, d.x]);\n\n            widthScale = d3.scale.linear().range([2, 105]);\n            arcScale = d3.scale.linear().range([0, 2 * Math.PI]);\n\n            innerArc = d3.svg.arc()\n                .outerRadius(nodeSize)\n                .startAngle(0)\n                .endAngle(arcSize);\n\n            // define the zoomListener which calls the zoom function on the \"zoom\" event constrained within the scaleExtents\n            zoomListener = d3.behavior.zoom()\n                .scaleExtent([0.1, 3])\n                .on(\"zoom\", zoom);\n\n            svg = d3.select(element).append(\"svg\")\n                .attr(\"version\", \"1.1\")\n                .attr(\"xmlns\", \"http://www.w3.org/2000/svg\")\n                .attr(\"viewBox\", `0 0 ${width + MARGIN.right + MARGIN.left} ${height + MARGIN.top + MARGIN.bottom}`)\n                .attr(\"width\", width + MARGIN.right + MARGIN.left)\n                .attr(\"height\", height + MARGIN.top + MARGIN.bottom)\n                .call(zoomListener)\n                .append(\"g\")\n                .attr(\"transform\", `translate(${MARGIN.left},${MARGIN.top})`)\n                .append(\"g\");\n\n            draw(options.data);\n        }\n\n        function draw(data) {\n            widthScale.domain([0, data.data.count]);\n\n            root = data;\n            root.x0 = height / 2;\n            root.y0 = 0;\n\n            // set everything visible\n            Node.setVisible(root);\n\n            // set colors\n            function color(d, i, c) {\n                if (c) {\n                    d.color = c;\n                } else {\n                    d.color = d3.functor(options.colors).call(this, d, i);\n                }\n                if (d.children) {\n                    d.children.forEach((node) => {\n                        color(node, i, d.color);\n                    });\n                }\n            }\n            root.children.forEach((node, i) => {\n                color(node, i);\n            });\n\n            // collapse everything\n            Node.collapseAll(root);\n            Node.expand(root);\n\n            update(root);\n            centerNode(root);\n        }\n\n        function update(source) {\n            // Compute the new tree layout.\n            let nodes = tree.nodes(root).reverse(),\n                links = tree.links(nodes);\n\n            // Normalize for fixed-depth.\n            nodes.forEach(d => {\n                d.y = d.depth * 180;\n            });\n\n            // Update the nodes…\n            let node = svg.selectAll(\"g.node\")\n                .data(nodes, d => d.id || (d.id = ++nodeId));\n\n            // Enter any new nodes at the parent's previous position.\n            let nodeEnter = node.enter().append(\"g\")\n                .attr(\"class\", \"node\")\n                .style(\"cursor\", \"pointer\")\n                .attr(\"transform\", d => `translate(${source.y || 0},${source.x0 || 0})`)\n                .on(\"click\", click)\n                .on(\"mouseover\", tooltipIn)\n                .on(\"mouseout\", tooltipOut)\n                .on(\"contextmenu\", rightClick);\n\n            nodeEnter.append(\"circle\")\n                .attr(\"r\", 1e-6)\n                .style(\"stroke-width\", \"1.5px\")\n                .style(\"stroke\", options.nodeStrokeColor)\n                .style(\"fill\", options.nodeFillColor);\n\n            nodeEnter.append(\"path\")\n                .attr(\"d\", innerArc)\n                .style(\"fill\", options.nodeStrokeColor)\n                .style(\"fill-opacity\", 0);\n\n            nodeEnter.append(\"text\")\n                .attr(\"x\", d => Node.isLeaf(d) ? -10 : 10)\n                .attr(\"dy\", \".35em\")\n                .attr(\"text-anchor\", d => Node.isLeaf(d) ? \"end\" : \"start\")\n                .text(d => d.name)\n                .style(\"font\", \"10px sans-serif\")\n                .style(\"fill-opacity\", 1e-6);\n\n            // Transition nodes to their new position.\n            let nodeUpdate = node.transition()\n                .duration(DURATION)\n                .attr(\"transform\", d => `translate(${d.y},${d.x})`);\n\n            nodeUpdate.select(\"circle\")\n                .attr(\"r\", nodeSize)\n                .style(\"fill-opacity\", d => d._children ? 1 : 0)\n                .style(\"stroke\", options.nodeStrokeColor)\n                .style(\"fill\", options.nodeFillColor);\n\n            nodeUpdate.select(\"text\")\n                .style(\"fill-opacity\", 1);\n\n            nodeUpdate.select(\"path\")\n                .duration(DURATION)\n                .attr(\"d\", innerArc)\n                .style(\"fill-opacity\", 0.8);\n\n            // Transition exiting nodes to the parent's new position.\n            let nodeExit = node.exit().transition()\n                .duration(DURATION)\n                .attr(\"transform\", d => `translate(${source.y},${source.x})`)\n                .remove();\n\n            nodeExit.select(\"circle\")\n                .attr(\"r\", 1e-6);\n\n            nodeExit.select(\"path\")\n                .style(\"fill-opacity\", 1e-6);\n\n            nodeExit.select(\"text\")\n                .style(\"fill-opacity\", 1e-6);\n\n            // Update the links…\n            let link = svg.selectAll(\"path.link\")\n                .data(links, d => d.target.id);\n\n            // Enter any new links at the parent's previous position.\n            link.enter().insert(\"path\", \"g\")\n                .attr(\"class\", \"link\")\n                .style(\"fill\", \"none\")\n                .style(\"stroke-opacity\", \"0.5\")\n                .style(\"stroke-linecap\", \"round\")\n                .style(\"stroke\", options.linkStrokeColor)\n                .style(\"stroke-width\", 1e-6)\n                .attr(\"d\", d => {\n                    let o = {\n                        x: (source.x0 || 0),\n                        y: (source.y0 || 0)\n                    };\n                    return diagonal({\n                        source: o,\n                        target: o\n                    });\n                });\n\n            // Transition links to their new position.\n            link.transition()\n                .duration(DURATION)\n                .attr(\"d\", diagonal)\n                .style(\"stroke\", options.linkStrokeColor)\n                .style(\"stroke-width\", d => {\n                    if (d.source.selected) {\n                        return widthScale(d.target.data.count) + \"px\";\n                    } else {\n                        return \"4px\";\n                    }\n                });\n\n            // Transition exiting nodes to the parent's new position.\n            link.exit().transition()\n                .duration(DURATION)\n                .style(\"stroke-width\", 1e-6)\n                .attr(\"d\", d => {\n                    let o = {\n                        x: source.x,\n                        y: source.y\n                    };\n                    return diagonal({\n                        source: o,\n                        target: o\n                    });\n                })\n                .remove();\n\n            // Stash the old positions for transition.\n            nodes.forEach(d => {\n                [d.x0, d.y0] = [d.x, d.y];\n            });\n        }\n\n        function nodeSize(d) {\n            if (d.selected) {\n                return widthScale(d.data.count) / 2;\n            } else {\n                return 2;\n            }\n        }\n\n        function arcSize(d) {\n            return arcScale(d.data.self_count / d.data.count) || 0;\n        }\n\n        // Toggle children on click.\n        function click(d) {\n            // check if click is triggered by panning on a node\n            if (d3.event.defaultPrevented) {\n                return;\n            }\n\n            if (d3.event.shiftKey) {\n                Node.expandAll(d);\n            } else if (d.children) {\n                Node.collapse(d);\n            } else {\n                Node.expand(d);\n            }\n            update(d);\n            centerNode(d);\n        }\n\n        // Sets the width of the right clicked node to 100%\n        function rightClick(d) {\n            if (d === rightClicked && d !== root) {\n                rightClick(root);\n                return;\n            }\n            rightClicked = d;\n\n            // set Selection properties\n            setSelected(root, false);\n            setSelected(d, true);\n\n            // scale the lines\n            widthScale.domain([0, d.data.count]);\n\n            Node.expand(d);\n\n            // redraw\n            if (d3.event !== null) {\n                d3.event.preventDefault();\n            }\n            update(d);\n            centerNode(d);\n\n            function setSelected(d, value) {\n                d.selected = value;\n                if (d.children) {\n                    d.children.forEach(c => {\n                        setSelected(c, value);\n                    });\n                } else if (d._children) {\n                    d._children.forEach(c => {\n                        setSelected(c, value);\n                    });\n                }\n            }\n        }\n\n        // Zoom function\n        function zoom() {\n            svg.attr(\"transform\", `translate(${d3.event.translate})scale(${d3.event.scale})`);\n        }\n\n        // Center a node\n        function centerNode(source) {\n            let scale = zoomListener.scale(),\n                x = -source.y0,\n                y = -source.x0;\n            x = x * scale + width / 4;\n            y = y * scale + height / 2;\n            svg.transition()\n                .duration(DURATION)\n                .attr(\"transform\", `translate(${x},${y})scale(${scale})`);\n            zoomListener.scale(scale);\n            zoomListener.translate([x, y]);\n        }\n\n        // tooltip functions\n        function tooltipIn(d, i) {\n            tooltip.html(`<b>${d.name}</b> (${d.data.rank})<br/>\n                ${numberFormat(!d.data.self_count ? \"0\" : d.data.self_count)}${d.data.self_count && d.data.self_count === 1 ? \" sequence\" : \" sequences\"} specific to this level<br/>\n                ${numberFormat(!d.data.count ? \"0\" : d.data.count)}${d.data.count && d.data.count === 1 ? \" sequence\" : \" sequences\"} specific to this level or lower`);\n            tooltip.style(\"top\", (d3.event.pageY - 5) + \"px\").style(\"left\", (d3.event.pageX + 15) + \"px\");\n\n            tooltipTimer = setTimeout(() => {\n                tooltip.style(\"visibility\", \"visible\");\n            }, 1000);\n\n        }\n\n        function tooltipOut(d, i) {\n            clearTimeout(tooltipTimer);\n            tooltip.style(\"visibility\", \"hidden\");\n        }\n\n\n        class Node {\n            // Returns true if a node is a leaf\n            static isLeaf(d) {\n                return d.children || d._children;\n            }\n\n            // set node and children visible\n            static setVisible(d) {\n                d.selected = true;\n                if (d.children) {\n                    d.children.forEach(Node.setVisible);\n                }\n            }\n\n            // collapse everything\n            static collapseAll(d) {\n                if (d.children && d.children.length === 0) {\n                    d.children = null;\n                }\n                if (d.children) {\n                    d._children = d.children;\n                    d._children.forEach(Node.collapseAll);\n                    d.children = null;\n                }\n            }\n\n            // Collapses a node\n            static collapse(d) {\n                if (d.children) {\n                    d._children = d.children;\n                    d.children = null;\n                }\n            }\n\n            static expandAll(d) {\n                Node.expand(d, 30);\n            }\n\n            // Expands a node and its children\n            static expand(d, i = 2) {\n                if (i > 0) {\n                    if (d._children) {\n                        d.children = d._children;\n                        d._children = null;\n                    }\n                    if (d.children) {\n                        d.children.forEach(c => {\n                            Node.expand(c, i - 1);\n                        });\n                    }\n                }\n            }\n        }\n\n        /*************** Public methods ***************/\n        that.reset = function reset() {\n            zoomListener.scale(1);\n            rightClick(root);\n        };\n\n        // initialize the object\n        init();\n\n        // return the object\n        return that;\n    };\n\n    /********** User modifiable  methods **********/\n    // set fill color\n    TreeView.NODE_FILL_COLOR = function nodefillColor(d) {\n        if (d.selected) {\n            return d._children ? d.color || \"#aaa\" : \"#fff\";\n        } else {\n            return \"#aaa\";\n        }\n    };\n    // set node stroke color\n    TreeView.NODE_STROKE_COLOR = function nodeStrokeColor(d) {\n        if (d.selected) {\n            return d.color || \"#aaa\";\n        } else {\n            return \"#aaa\";\n        }\n    };\n\n    // set link stroke color\n    TreeView.LINK_STROKE_COLOR = function linkStrokeColor(d) {\n        if (d.source.selected) {\n            return d.target.color;\n        } else {\n            return \"#aaa\";\n        }\n    };\n\n    // get a nice colour palet, see https://github.com/mbostock/d3/wiki/Ordinal-Scales#categorical-colors\n    TreeView.DEFAULT_SCALE = d3.scale.category10();\n\n    TreeView.DEFAULTS = {\n        height: 100,\n        width: 200,\n\n        colors: d => TreeView.DEFAULT_SCALE(d.name),\n        nodeFillColor: TreeView.NODE_FILL_COLOR,\n        nodeStrokeColor: TreeView.NODE_STROKE_COLOR,\n        linkStrokeColor: TreeView.LINK_STROKE_COLOR,\n    };\n\n    function Plugin(option) {\n        return this.each(function () {\n            let $this = $(this);\n            let data = $this.data('vis.treeview');\n            let options = $.extend({}, TreeView.DEFAULTS, $this.data(), typeof option === 'object' && option);\n\n            if (!data) {\n                $this.data('vis.treeview', (data = new TreeView(this, options)));\n            }\n            if (typeof option === 'string') {\n                data[option]();\n            }\n        });\n    }\n\n    $.fn.treeview = Plugin;\n    $.fn.treeview.Constructor = TreeView;\n})();\n"]}