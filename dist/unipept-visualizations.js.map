{"version":3,"sources":["webpack:///webpack/bootstrap b0b049baf223248a841f","webpack:///./src/index.js","webpack:///./src/treeview/treeview.js","webpack:///./src/shared/univis.js","webpack:///./src/shared/maxcountheap.js","webpack:///./src/treeview/treeviewNode.js","webpack:///./src/shared/node.js","webpack:///./src/treemap/treemap.js","webpack:///./src/treemap/treemapNode.js","webpack:///./src/sunburst/sunburst.js","webpack:///./src/sunburst/sunburstNode.js"],"names":["TreeView","element","data","options","that","MARGIN","top","right","bottom","left","DURATION","COLOR_SCALE","d3","scale","category10","DEFAULTS","height","width","nodeDistance","levelsToExpand","minNodeSize","maxNodeSize","countAccessor","d","count","rerootCallback","undefined","colors","name","nodeFillColor","nodeStrokeColor","linkStrokeColor","enableInnerArcs","enableExpandOnClick","enableRightClick","enableLabels","getLabel","enableTooltips","getTooltip","getTooltipTitle","Univis","getTooltipText","enableAutoExpand","settings","visibleRoot","tooltipTimer","nodeId","root","tree","tooltip","diagonal","widthScale","innerArc","zoomListener","svg","init","TreeviewNode","initTooltip","initInnerArcs","layout","nodeSize","separation","a","b","distance","parent","projection","y","x","linear","range","behavior","zoom","scaleExtent","on","attr","event","translate","select","append","call","draw","createNode","id","style","arcScale","Math","PI","arc","outerRadius","startAngle","endAngle","self_count","domain","x0","y0","setSelected","children","forEach","i","color","functor","setRecursiveProperty","collapseAll","initialExpand","expandAll","update","centerNode","expand","allowedCount","isFinite","pq","MaxCountHeap","size","toExpand","remove","add","c","source","nodes","reverse","links","depth","node","selectAll","nodeEnter","enter","click","tooltipIn","tooltipOut","rightClick","isLeaf","text","nodeUpdate","transition","duration","_children","nodeExit","exit","link","target","insert","o","selected","defaultPrevented","shiftKey","collapse","reroot","preventDefault","html","pageY","pageX","setTimeout","clearTimeout","reset","setFullScreen","isFullScreen","w","h","$","window","getRoot","fn","treeview","get","s","split","reduce","charCodeAt","textColor","brightness","rgb","err","r","g","comp","heapify","floor","length","sink","bubbleUp","index","value","parentIndex","targetIndex","iterable","_data","Array","from","item","push","output","pop","setCount","sum","Node","new","property","_height","max","getHeight","_depth","getDepth","construct","map","n","TreeMap","className","levels","getLevel","getBreadcrumbTooltip","colorRoot","colorLeaf","colorBreadcrumbs","labelHeight","current","treemapLayout","breadcrumbs","treemap","colorScale","TreemapNode","initCSS","elementClass","addClass","prop","appendTo","empty","padding","interpolate","interpolateLab","setBreadcrumbs","crumbs","temp","triggerCallback","getReadableColorFor","tooltipMove","order","position","dx","dy","resize","Sunburst","colorCounter","addEmptyChildren","redraw","breadcrumbWidth","radius","currentMaxLevel","vis","partition","sort","min","innerRadius","path","colour","getComputedTextLength","my","maxY","xd","yd","yr","t","shift","breadArc","bc","getTitleText","round","enableBreadcrumbs","attrTween","arcTween","e","isParentOf","angle","each","useFixedColors","fixedColors","abs","stringHash","rank","colours","hsl","singleChild","l","getColor","COLORS","FIXED_COLORS","p","ml","some","sunburst","SunburstNode"],"mappings":"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","file":"unipept-visualizations.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap b0b049baf223248a841f","import TreeView from \"./treeview/treeview\";\nimport TreeMap from \"./treemap/treemap\";\nimport Sunburst from \"./sunburst/sunburst\";\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/**\n * Zoomable treeview, inspiration from\n * - http://bl.ocks.org/mbostock/4339083\n * - https://gist.github.com/robschmuecker/7880033\n * - http://www.brightpointinc.com/interactive/budget/index.html?source=d3js\n */\nimport Univis from \"../shared/univis\";\nimport MaxCountHeap from \"../shared/maxcountheap\";\nimport TreeviewNode from \"./treeviewNode\";\n\n\nexport default function TreeView(element, data, options = {}) {\n    let that = {};\n\n    const MARGIN = {\n            top: 5,\n            right: 5,\n            bottom: 5,\n            left: 5,\n        },\n        DURATION = 750,\n        COLOR_SCALE = d3.scale.category10(),\n        DEFAULTS = {\n            height: 300,\n            width: 600,\n            nodeDistance: 180,\n            levelsToExpand: 2,\n            minNodeSize: 2,\n            maxNodeSize: 105,\n\n            countAccessor: d => d.data.count,\n            rerootCallback: undefined,\n\n            colors: d => COLOR_SCALE(d.name),\n            nodeFillColor: nodeFillColor,\n            nodeStrokeColor: nodeStrokeColor,\n            linkStrokeColor: linkStrokeColor,\n\n            enableInnerArcs: true,\n            enableExpandOnClick: true,\n            enableRightClick: true,\n\n            enableLabels: true,\n            getLabel: d => d.name,\n\n            enableTooltips: true,\n            getTooltip: getTooltip,\n            getTooltipTitle: Univis.getTooltipTitle,\n            getTooltipText: Univis.getTooltipText,\n            enableAutoExpand: false,\n        };\n\n    let settings;\n\n    let visibleRoot,\n        tooltipTimer;\n\n    let nodeId = 0,\n        root;\n\n    let tree,\n        tooltip,\n        diagonal,\n        widthScale,\n        innerArc,\n        zoomListener,\n        svg;\n\n    function init() {\n        settings = Object.assign({}, DEFAULTS, options);\n        TreeviewNode.settings = settings;\n\n        settings.width = settings.width - MARGIN.right - MARGIN.left;\n        settings.height = settings.height - MARGIN.top - MARGIN.bottom;\n\n        if (settings.enableTooltips) {\n            initTooltip();\n        }\n\n        if (settings.enableInnerArcs) {\n            initInnerArcs();\n        }\n\n        tree = d3.layout.tree()\n                .nodeSize([2, 10])\n                .separation((a, b) => {\n                    let width = (nodeSize(a) + nodeSize(b)),\n                        distance = width / 2 + 4;\n                    return (a.parent === b.parent) ? distance : distance + 4;\n                });\n\n        diagonal = d3.svg.diagonal().projection(d => [d.y, d.x]);\n\n        widthScale = d3.scale.linear().range([settings.minNodeSize, settings.maxNodeSize]);\n\n            // define the zoomListener which calls the zoom function on the \"zoom\" event constrained within the scaleExtents\n        zoomListener = d3.behavior.zoom()\n                .scaleExtent([0.1, 3])\n                .on(\"zoom\", () => {\n                    svg.attr(\"transform\", `translate(${d3.event.translate})scale(${d3.event.scale})`);\n                });\n\n        svg = d3.select(element).append(\"svg\")\n                .attr(\"version\", \"1.1\")\n                .attr(\"xmlns\", \"http://www.w3.org/2000/svg\")\n                .attr(\"viewBox\", `0 0 ${settings.width + MARGIN.right + MARGIN.left} ${settings.height + MARGIN.top + MARGIN.bottom}`)\n                .attr(\"width\", settings.width + MARGIN.right + MARGIN.left)\n                .attr(\"height\", settings.height + MARGIN.top + MARGIN.bottom)\n                .call(zoomListener)\n                .append(\"g\")\n                .attr(\"transform\", `translate(${MARGIN.left},${MARGIN.top})`)\n                .append(\"g\");\n\n        draw(TreeviewNode.createNode(data));\n    }\n\n    function initTooltip() {\n        tooltip = d3.select(\"body\")\n                .append(\"div\")\n                .attr(\"id\", element.id + \"-tooltip\")\n                .attr(\"class\", \"tip\")\n                .style(\"position\", \"absolute\")\n                .style(\"z-index\", \"10\")\n                .style(\"visibility\", \"hidden\")\n                .style(\"background-color\", \"white\")\n                .style(\"padding\", \"2px\")\n                .style(\"border\", \"1px solid #dddddd\")\n                .style(\"border-radius\", \"3px;\");\n    }\n\n    function initInnerArcs() {\n        let arcScale = d3.scale.linear().range([0, 2 * Math.PI]);\n\n        innerArc = d3.svg.arc()\n                .outerRadius(nodeSize)\n                .startAngle(0)\n                .endAngle(d => arcScale(d.data.self_count / d.data.count) || 0);\n    }\n\n    function draw(data) {\n        widthScale.domain([0, data.data.count]);\n\n        root = data;\n        root.x0 = settings.height / 2;\n        root.y0 = 0;\n\n            // set everything visible\n        root.setSelected(true);\n\n        root.children.forEach((d, i) => {\n            d.color = d3.functor(settings.colors).call(this, d, i);\n            d.setRecursiveProperty(\"color\", d.color);\n        });\n\n        if (settings.enableExpandOnClick) {\n            root.collapseAll();\n            initialExpand(root);\n        } else {\n            root.expandAll();\n        }\n\n        update(root);\n        centerNode(root);\n    }\n\n    function initialExpand(root) {\n        if(!settings.enableAutoExpand) {\n            root.expand();\n            return;\n        }\n\n        root.expand(1);\n        let allowedCount = root.data.count * (isFinite(settings.enableAutoExpand) ? settings.enableAutoExpand : 0.8);\n        const pq = new MaxCountHeap(root.children || []);\n        while (allowedCount > 0 && pq.size > 0) {\n            const toExpand = pq.remove();\n            allowedCount -= toExpand.data.count;\n            toExpand.expand(1);\n            (toExpand.children || []).forEach(c => pq.add(c));\n        }\n    }\n\n    function update(source) {\n            // Compute the new tree layout.\n        let nodes = tree.nodes(root).reverse(),\n            links = tree.links(nodes);\n\n            // Normalize for fixed-depth.\n        nodes.forEach(d => {\n            d.y = d.depth * settings.nodeDistance;\n        });\n\n            // Update the nodes…\n        let node = svg.selectAll(\"g.node\")\n                .data(nodes, d => d.id || (d.id = ++nodeId));\n\n            // Enter any new nodes at the parent's previous position.\n        let nodeEnter = node.enter().append(\"g\")\n                .attr(\"class\", \"node\")\n                .style(\"cursor\", \"pointer\")\n                .attr(\"transform\", d => `translate(${source.y || 0},${source.x0 || 0})`)\n                .on(\"click\", click)\n                .on(\"mouseover\", tooltipIn)\n                .on(\"mouseout\", tooltipOut)\n                .on(\"contextmenu\", rightClick);\n\n        nodeEnter.append(\"circle\")\n                .attr(\"r\", 1e-6)\n                .style(\"stroke-width\", \"1.5px\")\n                .style(\"stroke\", settings.nodeStrokeColor)\n                .style(\"fill\", settings.nodeFillColor);\n\n        if (settings.enableInnerArcs) {\n            nodeEnter.append(\"path\")\n                    .attr(\"d\", innerArc)\n                    .style(\"fill\", settings.nodeStrokeColor)\n                    .style(\"fill-opacity\", 0);\n        }\n\n        if (settings.enableLabels) {\n            nodeEnter.append(\"text\")\n                    .attr(\"x\", d => d.isLeaf() ? 10 : -10)\n                    .attr(\"dy\", \".35em\")\n                    .attr(\"text-anchor\", d => d.isLeaf() ? \"start\" : \"end\")\n                    .text(settings.getLabel)\n                    .style(\"font\", \"10px sans-serif\")\n                    .style(\"fill-opacity\", 1e-6);\n        }\n\n            // Transition nodes to their new position.\n        let nodeUpdate = node.transition()\n                .duration(DURATION)\n                .attr(\"transform\", d => `translate(${d.y},${d.x})`);\n\n        nodeUpdate.select(\"circle\")\n                .attr(\"r\", nodeSize)\n                .style(\"fill-opacity\", d => d._children ? 1 : 0)\n                .style(\"stroke\", settings.nodeStrokeColor)\n                .style(\"fill\", settings.nodeFillColor);\n\n        if (settings.enableLabels) {\n            nodeUpdate.select(\"text\")\n                    .style(\"fill-opacity\", 1);\n        }\n\n        if (settings.enableInnerArcs) {\n            nodeUpdate.select(\"path\")\n                    .duration(DURATION)\n                    .attr(\"d\", innerArc)\n                    .style(\"fill-opacity\", 0.8);\n        }\n\n            // Transition exiting nodes to the parent's new position.\n        let nodeExit = node.exit().transition()\n                .duration(DURATION)\n                .attr(\"transform\", d => `translate(${source.y},${source.x})`)\n                .remove();\n\n        nodeExit.select(\"circle\")\n                .attr(\"r\", 1e-6);\n\n        nodeExit.select(\"path\")\n                .style(\"fill-opacity\", 1e-6);\n\n        nodeExit.select(\"text\")\n                .style(\"fill-opacity\", 1e-6);\n\n            // Update the links…\n        let link = svg.selectAll(\"path.link\")\n                .data(links, d => d.target.id);\n\n            // Enter any new links at the parent's previous position.\n        link.enter().insert(\"path\", \"g\")\n                .attr(\"class\", \"link\")\n                .style(\"fill\", \"none\")\n                .style(\"stroke-opacity\", \"0.5\")\n                .style(\"stroke-linecap\", \"round\")\n                .style(\"stroke\", settings.linkStrokeColor)\n                .style(\"stroke-width\", 1e-6)\n                .attr(\"d\", d => {\n                    let o = {\n                        x: (source.x0 || 0),\n                        y: (source.y0 || 0),\n                    };\n                    return diagonal({\n                        source: o,\n                        target: o,\n                    });\n                });\n\n            // Transition links to their new position.\n        link.transition()\n                .duration(DURATION)\n                .attr(\"d\", diagonal)\n                .style(\"stroke\", settings.linkStrokeColor)\n                .style(\"stroke-width\", d => {\n                    if (d.source.selected) {\n                        return widthScale(d.target.data.count) + \"px\";\n                    } else {\n                        return \"4px\";\n                    }\n                });\n\n            // Transition exiting nodes to the parent's new position.\n        link.exit().transition()\n                .duration(DURATION)\n                .style(\"stroke-width\", 1e-6)\n                .attr(\"d\", d => {\n                    let o = {\n                        x: source.x,\n                        y: source.y,\n                    };\n                    return diagonal({\n                        source: o,\n                        target: o,\n                    });\n                })\n                .remove();\n\n            // Stash the old positions for transition.\n        nodes.forEach(d => {\n            [d.x0, d.y0] = [d.x, d.y];\n        });\n    }\n\n    function nodeSize(d) {\n        if (d.selected) {\n            return widthScale(d.data.count) / 2;\n        } else {\n            return 2;\n        }\n    }\n\n    // Toggle children on click.\n    function click(d) {\n        if (!settings.enableExpandOnClick) {\n            return;\n        }\n\n        // check if click is triggered by panning on a node\n        if (d3.event.defaultPrevented) {\n            return;\n        }\n\n        if (d3.event.shiftKey) {\n            d.expandAll();\n        } else if (d.children) {\n            d.collapse();\n        } else {\n            d.expand();\n        }\n        update(d);\n        centerNode(d);\n    }\n\n    function rightClick(d) {\n        if (settings.enableRightClick) {\n            reroot(d);\n        }\n    }\n\n        // Sets the width of the right clicked node to 100%\n    function reroot(d) {\n        if (d === visibleRoot && d !== root) {\n            reroot(root);\n            return;\n        }\n        visibleRoot = d;\n\n            // set Selection properties\n        root.setSelected(false);\n        d.setSelected(true);\n\n            // scale the lines\n        widthScale.domain([0, d.data.count]);\n\n        d.expand();\n\n            // redraw\n        if (d3.event !== null) {\n            d3.event.preventDefault();\n        }\n        update(d);\n        centerNode(d);\n\n        if (settings.rerootCallback) {\n            settings.rerootCallback.call(null, d);\n        }\n    }\n\n        // Center a node\n    function centerNode(source) {\n        let scale = zoomListener.scale(),\n            [x, y] = [-source.y0, -source.x0];\n        x = x * scale + settings.width / 4;\n        y = y * scale + settings.height / 2;\n        svg.transition()\n                .duration(DURATION)\n                .attr(\"transform\", `translate(${x},${y})scale(${scale})`);\n        zoomListener.scale(scale);\n        zoomListener.translate([x, y]);\n    }\n\n        // tooltip functions\n    function tooltipIn(d, i) {\n        if (!settings.enableTooltips) {\n            return;\n        }\n        tooltip.html(settings.getTooltip(d))\n                .style(\"top\", (d3.event.pageY - 5) + \"px\")\n                .style(\"left\", (d3.event.pageX + 15) + \"px\");\n\n        tooltipTimer = setTimeout(() => {\n            tooltip.style(\"visibility\", \"visible\");\n        }, 1000);\n    }\n\n    function tooltipOut(d, i) {\n        if (!settings.enableTooltips) {\n            return;\n        }\n        clearTimeout(tooltipTimer);\n        tooltip.style(\"visibility\", \"hidden\");\n    }\n\n        /** ************ Default methods ***************/\n        // set fill color\n    function nodeFillColor(d) {\n        if (d.selected) {\n            return d._children ? d.color || \"#aaa\" : \"#fff\";\n        } else {\n            return \"#aaa\";\n        }\n    }\n\n        // set node stroke color\n    function nodeStrokeColor(d) {\n        if (d.selected) {\n            return d.color || \"#aaa\";\n        } else {\n            return \"#aaa\";\n        }\n    }\n\n        // set link stroke color\n    function linkStrokeColor(d) {\n        if (d.source.selected) {\n            return d.target.color;\n        } else {\n            return \"#aaa\";\n        }\n    }\n\n    function getTooltip(d) {\n        return `<h3 class='tip-title'>${settings.getTooltipTitle(d)}</h3><p>${settings.getTooltipText(d)}</p>`;\n    }\n\n        /** ************* Public methods ***************/\n    that.reset = function reset() {\n        zoomListener.scale(1);\n        reroot(root);\n    };\n\n    /**\n     * Sets the visualisation in full screen mode\n     *\n     * @param <boolean> isFullScreen indicates if we're in full screen mode\n     */\n    that.setFullScreen = function setFullScreen(isFullScreen) {\n        // the delay is because the event fires before we're in fullscreen\n        // so the height en width functions don't give a correct result\n        // without the delay\n        setTimeout(() => {\n            let [w, h] = [settings.width, settings.height];\n            if (isFullScreen) {\n                w = $(window).width();\n                h = $(window).height() - 44;\n            }\n            $(element).children(\"svg\")\n                .attr(\"width\", w)\n                .attr(\"height\", h);\n        }, 1000);\n    };\n\n    /**\n     * Get the root of the visual tree\n     *\n     * @return {TreeviewNode}   The root node of the visualisation\n     */\n    that.getRoot = function getRoot() {\n        return root;\n    };\n\n    /**\n     * Apply changes made to the tree or its data\n     */\n    that.update = update;\n\n    /**\n     * Center a node of the tree\n     */\n    that.centerNode = centerNode;\n\n        // initialize the object\n    init();\n\n        // return the object\n    return that;\n}\n\n$.fn.treeview = function (data, options) {\n    return new TreeView(this.get(0), data, options);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/treeview/treeview.js","export default class Univis {\n\n    /**\n     * Hash function for strings from\n     * http://stackoverflow.com/a/15710692/865696\n     */\n    static stringHash(s) {\n        return s.split(\"\").reduce(function (a, b) {\n            let c = ((a << 5) - a) + b.charCodeAt(0);\n            return c & c;\n        }, 0);\n    }\n\n    /*\n     * Returns the readable text color based on the brightness of a given backgroud color\n     */\n    static getReadableColorFor(color) {\n        let textColor = \"#000\";\n        try {\n            textColor = Univis.brightness(d3.rgb(color)) < 125 ? \"#eee\" : \"#000\";\n        } catch (err) { /* go on */ }\n        return textColor;\n    }\n\n    /*\n     * Returns the brightness of an rgb-color\n     * from: http:// www.w3.org/WAI/ER/WD-AERT/#color-contrast\n     */\n    static brightness(rgb) {\n        return rgb.r * 0.299 + rgb.g * 0.587 + rgb.b * 0.114;\n    }\n\n    static getTooltipTitle(d) {\n        return d.name;\n    }\n\n    static getTooltipText(d) {\n        return `${d.data.count} hits`;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/univis.js","/*\n * A priority qeueue that works with Nodes.\n * Based on https://github.com/gkz/es-collections\n */\n\n/* eslint-disable require-jsdoc, no-param-reassign */\n\nconst comp = (a, b) => b.data.count - a.data.count;\n\nfunction heapify(data) {\n    for (let i = Math.floor((data.length - 2) / 2); i >= 0; i--) {\n        sink(data, comp, i);\n    }\n    return data;\n}\n\nfunction bubbleUp(data, index) {\n    const value = data[index];\n\n    while (index > 0) {\n        const parentIndex = Math.floor((index - 1) / 2);\n        const parent = data[parentIndex];\n        if (comp(value, parent) < 0) {\n            data[index] = parent;\n        } else {\n            break;\n        }\n        index = parentIndex;\n    }\n    data[index] = value;\n    return index;\n}\n\nfunction sink(data, index) {\n    const value = data[index];\n    const size = data.length;\n\n    while (2 * index + 1 < size) {\n        let targetIndex = 2 * index + 1;\n        if (targetIndex < size - 1\n            && comp(data[targetIndex + 1], data[targetIndex]) < 0) {\n            targetIndex++;\n        }\n        if (comp(value, data[targetIndex]) <= 0) {\n            break;\n        }\n        data[index] = data[targetIndex];\n        index = targetIndex;\n    }\n    data[index] = value;\n    return index;\n}\n\n\nexport default class MaxCountHeap {\n    constructor(iterable = []) {\n        this._data = heapify(Array.from(iterable));\n    }\n    add(item) {\n        this._data.push(item);\n        bubbleUp(this._data, this.size - 1);\n        return this;\n    }\n    peek() {\n        return this._data[0];\n    }\n    remove() {\n        const output = this._data[0];\n        if (this.size > 1) {\n            this._data[0] = this._data.pop();\n            sink(this._data, 0);\n        } else {\n            this._data.pop();\n        }\n        return output;\n    }\n    clear() {\n        this._data = [];\n    }\n    get size() {\n        return this._data.length;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/maxcountheap.js","import Node from \"../shared/node\";\n\nexport default class TreeviewNode extends Node {\n    constructor(node = {}) {\n        super(node);\n        this.settings = TreeviewNode.settings;\n        this.setCount();\n    }\n\n    static new(node = {}) {\n        return new TreeviewNode(node);\n    }\n\n    static createNode(node) {\n        return Node.createNode(node, TreeviewNode.new);\n    }\n\n    setCount() {\n        if (this.settings.countAccessor(this)) {\n            this.data.count = this.settings.countAccessor(this);\n        } else if (this.children) {\n            this.data.count = this.children.reduce((sum, c) => sum + c.data.count, 0);\n        } else {\n            this.data.count = 0;\n        }\n    }\n\n    setSelected(value) {\n        this.setRecursiveProperty(\"selected\", value);\n    }\n\n        // collapse everything\n    collapseAll() {\n        if (this.children && this.children.length === 0) {\n            this.children = null;\n        }\n        if (this.children) {\n            this._children = this.children;\n            this._children.forEach(c => {\n                c.collapseAll();\n            });\n            this.children = null;\n        }\n    }\n\n        // Collapses a node\n    collapse() {\n        if (this.children) {\n            this._children = this.children;\n            this.children = null;\n        }\n    }\n\n    expandAll() {\n        this.expand(100);\n    }\n\n        // Expands a node and its children\n    expand(i = this.settings.levelsToExpand) {\n        if (i > 0) {\n            if (this._children) {\n                this.children = this._children;\n                this._children = null;\n            }\n            if (this.children) {\n                this.children.forEach(c => {\n                    c.expand(i - 1);\n                });\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/treeview/treeviewNode.js","export default class Node {\n    constructor(node = {}) {\n        this.data = {};\n        Object.assign(this, node);\n    }\n\n    static new(node = {}) {\n        return new Node(node);\n    }\n\n    static createNode(node, construct = Node.new) {\n        if (node.children) {\n            node.children = node.children.map(\n                n => Node.createNode(n, construct)\n            );\n        }\n        return construct.call(null, node);\n    }\n\n    // sets a property for a node and all its children\n    setRecursiveProperty(property, value) {\n        this[property] = value;\n        if (this.children) {\n            this.children.forEach(c => {\n                c.setRecursiveProperty(property, value);\n            });\n        } else if (this._children) {\n            this._children.forEach(c => {\n                c.setRecursiveProperty(property, value);\n            });\n        }\n    }\n\n    // Returns true if a node is a leaf\n    isLeaf() {\n        return (!this.children && !this._children) ||\n            (this.children && this.children.length === 0) ||\n            (this._children && this._children.length === 0);\n    }\n\n    getHeight() {\n        if (this._height === undefined) {\n            if (this.isLeaf()) {\n                this._height = 0;\n            } else {\n                this._height = d3.max(this.children, c => c.getHeight()) + 1;\n            }\n        }\n        return this._height;\n    }\n\n    getDepth() {\n        if (this._depth === undefined) {\n            if (this.parent === undefined) {\n                this._depth = 0;\n            } else {\n                this._depth = this.parent.getDepth() + 1;\n            }\n        }\n        return this._depth;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/node.js","/**\n * Interactive treemap\n */\nimport Univis from \"../shared/univis\";\nimport TreemapNode from \"./treemapNode\";\n\nexport default function TreeMap(element, data, options = {}) {\n    let that = {};\n\n    const MARGIN = {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n        },\n        DEFAULTS = {\n            height: 300,\n            width: 600,\n\n            className: \"unipept-treemap\",\n            levels: undefined,\n            getLevel: d => d.getDepth(),\n\n            countAccessor: d => d.data.self_count,\n            rerootCallback: undefined,\n\n            getBreadcrumbTooltip: d => d.name,\n            colorRoot: \"#104B7D\",\n            colorLeaf: \"#fdffcc\",\n            colorBreadcrumbs: \"#FF8F00\",\n\n            labelHeight: 10,\n            getLabel: d => d.name,\n\n            enableTooltips: true,\n            getTooltip: getTooltip,\n            getTooltipTitle: Univis.getTooltipTitle,\n            getTooltipText: Univis.getTooltipText,\n        };\n\n    let settings;\n\n    let root,\n        nodeId = 0,\n        current,\n        treemapLayout,\n        breadcrumbs,\n        treemap,\n        tooltip,\n        colorScale;\n\n        /**\n         * Initializes Treemap\n         */\n    function init() {\n        settings = Object.assign({}, DEFAULTS, options);\n\n        root = TreemapNode.createNode(data);\n\n        settings.width = settings.width - MARGIN.right - MARGIN.left;\n        settings.height = settings.height - MARGIN.top - MARGIN.bottom;\n\n        settings.levels = settings.levels || root.getHeight();\n\n        if (settings.enableTooltips) {\n            initTooltip();\n        }\n\n        initCSS();\n\n            // setup the visualisation\n        draw(root);\n        reroot(root, false);\n    }\n\n    function initTooltip() {\n        tooltip = d3.select(\"body\")\n                .append(\"div\")\n                .attr(\"id\", element.id + \"-tooltip\")\n                .attr(\"class\", \"tip\")\n                .style(\"position\", \"absolute\")\n                .style(\"z-index\", \"10\")\n                .style(\"visibility\", \"hidden\")\n                .style(\"background-color\", \"white\")\n                .style(\"padding\", \"2px\")\n                .style(\"border\", \"1px solid #dddddd\")\n                .style(\"border-radius\", \"3px;\");\n    }\n\n    function initCSS() {\n        let elementClass = settings.className;\n        $(element).addClass(elementClass);\n        $(\"<style>\").prop(\"type\", \"text/css\")\n                .html(`\n                    .${elementClass} {\n                        font-family: Roboto,'Helvetica Neue',Helvetica,Arial,sans-serif;\n                    }\n                    .${elementClass} .node {\n                        font-size: 9px;\n                        line-height: 10px;\n                        overflow: hidden;\n                        position: absolute;\n                        text-indent: 2px;\n                        text-align: center;\n                        text-overflow: ellipsis;\n                        cursor: pointer;\n                    }\n                    .${elementClass} .node:hover {\n                        outline: 1px solid white;\n                    }\n                    .${elementClass} .breadcrumbs {\n                        font-size: 11px;\n                        line-height: 20px;\n                        padding-left: 5px;\n                        font-weight: bold;\n                        color: white;\n                        box-sizing: border-box;\n                    }\n                    .full-screen .${elementClass} .breadcrumbs {\n                        width: 100% !important;\n                    }\n                    .${elementClass} .crumb {\n                        cursor: pointer;\n                    }\n                    .${elementClass} .crumb .link:hover {\n                        text-decoration: underline;\n                    }\n                    .${elementClass} .breadcrumbs .crumb + .crumb::before {\n                        content: \" > \";\n                        cursor: default;\n                    }\n                `)\n                .appendTo(\"head\");\n    }\n\n    function draw(data) {\n        $(element).empty();\n\n        treemapLayout = d3.layout.treemap()\n                .size([settings.width + 1, settings.height + 1])\n                .padding([settings.labelHeight, 0, 0, 0])\n                .value(settings.countAccessor);\n\n        colorScale = d3.scale.linear()\n                .domain([0, settings.levels])\n                .range([settings.colorRoot, settings.colorLeaf])\n                .interpolate(d3.interpolateLab);\n\n        breadcrumbs = d3.select(element).append(\"div\")\n                .attr(\"class\", \"breadcrumbs\")\n                .style(\"position\", \"relative\")\n                .style(\"width\", settings.width + \"px\")\n                .style(\"height\", \"20px\")\n                .style(\"background-color\", settings.colorBreadcrumbs);\n\n        treemap = d3.select(element).append(\"div\")\n                .style(\"position\", \"relative\")\n                .style(\"width\", settings.width + \"px\")\n                .style(\"height\", settings.height + \"px\")\n                .style(\"left\", MARGIN.left + \"px\")\n                .style(\"top\", MARGIN.top + \"px\");\n    }\n\n    function setBreadcrumbs() {\n        let crumbs = [];\n        let temp = current;\n        while (temp) {\n            crumbs.push(temp);\n            temp = temp.parent;\n        }\n        crumbs.reverse();\n        breadcrumbs.html(\"\");\n        breadcrumbs.selectAll(\".crumb\")\n                .data(crumbs)\n                .enter()\n                .append(\"span\")\n                .attr(\"class\", \"crumb\")\n                .attr(\"title\", settings.getBreadcrumbTooltip)\n                .html(d => `<span class='link'>${d.name}</span>`)\n                .on(\"click\", d => {\n                    reroot(d);\n                });\n    }\n\n    function reroot(data, triggerCallback = true) {\n        current = data;\n\n        setBreadcrumbs();\n\n        let nodes = treemap.selectAll(\".node\")\n                .data(treemapLayout.nodes(data), d => d.id || (d.id = ++nodeId));\n\n        nodes.enter()\n                .append(\"div\")\n                .attr(\"class\", \"node\")\n                .style(\"background\", d => colorScale(settings.getLevel(d)))\n                .style(\"color\", d => Univis.getReadableColorFor(colorScale(settings.getLevel(d))))\n                .style(\"left\", \"0px\")\n                .style(\"top\", \"0px\")\n                .style(\"width\", \"0px\")\n                .style(\"height\", \"0px\")\n                .text(settings.getLabel)\n                .on(\"click\", d => {\n                    reroot(d);\n                })\n                .on(\"contextmenu\", d => {\n                    d3.event.preventDefault();\n                    if (current.parent) {\n                        reroot(current.parent);\n                    }\n                })\n                .on(\"mouseover\", tooltipIn)\n                .on(\"mousemove\", tooltipMove)\n                .on(\"mouseout\", tooltipOut);\n\n        nodes.order()\n                .transition()\n                .call(position);\n\n        nodes.exit().remove();\n\n        if (triggerCallback && settings.rerootCallback) {\n            settings.rerootCallback.call(null, current);\n        }\n    }\n\n    function update() {\n        let nodes = treemap.selectAll(\".node\")\n                .data(treemapLayout.nodes(data), d => d.id)\n                .order()\n                .transition()\n                .call(position);\n    }\n\n        /**\n         * sets the position of a square\n         */\n    function position() {\n        this.style(\"left\", d => d.x + \"px\")\n                .style(\"top\", d => d.y + \"px\")\n                .style(\"width\", d => Math.max(0, d.dx - 1) + \"px\")\n                .style(\"height\", d => Math.max(0, d.dy - 1) + \"px\");\n    }\n\n        /**\n         * Resizes the treemap for a given width and height\n         */\n    function resize(width, height) {\n        treemapLayout = d3.layout.treemap()\n                .size([width + 1, height + 1])\n                .padding([10, 0, 0, 0])\n                .value(settings.countAccessor);\n        update();\n    }\n\n        // tooltip functions\n    function tooltipIn(d, i) {\n        if (!settings.enableTooltips) {\n            return;\n        }\n        tooltip.html(settings.getTooltip(d))\n                .style(\"top\", (d3.event.pageY - 5) + \"px\")\n                .style(\"left\", (d3.event.pageX + 15) + \"px\")\n                .style(\"visibility\", \"visible\");\n    }\n\n    function tooltipOut(d, i) {\n        if (!settings.enableTooltips) {\n            return;\n        }\n        tooltip.style(\"visibility\", \"hidden\");\n    }\n\n    function tooltipMove(d, i) {\n        if (!settings.enableTooltips) {\n            return;\n        }\n        tooltip.style(\"top\", (d3.event.pageY - 5) + \"px\")\n                .style(\"left\", (d3.event.pageX + 15) + \"px\");\n    }\n\n    function getTooltip(d) {\n        return `<h3 class='tip-title'>${settings.getTooltipTitle(d)}</h3><p>${settings.getTooltipText(d)}</p>`;\n    }\n\n        /** ************* Public methods ***************/\n        /**\n         * Resets the treemap to its initial position\n         */\n    that.reset = function reset() {\n        reroot(root);\n    };\n\n        /**\n         * Sets the visualisation in full screen mode\n         *\n         * @param <boolean> isFullScreen indicates if we're in full screen mode\n         */\n    that.setFullScreen = function setFullScreen(isFullScreen) {\n            // the delay is because the event fires before we're in fullscreen\n            // so the height en width functions don't give a correct result\n            // without the delay\n        setTimeout(function () {\n            let [w, h] = [settings.width, settings.height];\n            if (isFullScreen) {\n                w = $(window).width();\n                h = $(window).height() - 44;\n            }\n            resize(w, h);\n        }, 1000);\n    };\n\n    /**\n     * Get the root of the visual tree\n     *\n     * @return {TreeviewNode}   The root node of the visualisation\n     */\n    that.getRoot = function getRoot() {\n        return root;\n    };\n\n    /**\n     * Apply changes made to the tree or its data\n     */\n    that.update = update;\n\n        // initialize the object\n    init();\n\n    return that;\n}\n\n$.fn.treemap = function (data, options) {\n    return new TreeMap(this.get(0), data, options);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/treemap/treemap.js","import Node from \"../shared/node\";\n\nexport default class TreemapNode extends Node {\n    static new(node = {}) {\n        return new TreemapNode(node);\n    }\n\n    static createNode(node) {\n        return Node.createNode(node, TreemapNode.new);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/treemap/treemapNode.js","/**\n * Interactive Sunburst\n */\nimport Univis from \"../shared/univis\";\nimport SunburstNode from \"./sunburstNode\";\n\nexport default class Sunburst {\n\n    constructor(element, data, options = {}) {\n        this.element = element;\n        this.data = data;\n        this.settings = Object.assign({}, this.DEFAULTS, options);\n\n        this.settings.width = this.settings.width - Sunburst.MARGIN.right - Sunburst.MARGIN.left;\n        this.settings.height = this.settings.height - Sunburst.MARGIN.top - Sunburst.MARGIN.bottom;\n\n        this.colorCounter = -1;\n\n        // prepare data\n        this.data.children = this.addEmptyChildren(this.data.children, this.settings.countAccessor.call(null, this.data));\n\n        if (this.settings.enableTooltips) {\n            this.initTooltip();\n        }\n\n        this.initCSS();\n\n        // draw everything\n        this.redraw();\n\n        // fake click on the center node\n        setTimeout(() => this.reset(), 1000);\n    }\n\n    initTooltip() {\n        this.tooltip = d3.select(\"body\")\n            .append(\"div\")\n            .attr(\"id\", this.element.id + \"-tooltip\")\n            .attr(\"class\", \"tip\")\n            .style(\"position\", \"absolute\")\n            .style(\"z-index\", \"10\")\n            .style(\"visibility\", \"hidden\")\n            .style(\"background-color\", \"white\")\n            .style(\"padding\", \"2px\")\n            .style(\"border\", \"1px solid #dddddd\")\n            .style(\"border-radius\", \"3px;\");\n    }\n\n    initCSS() {\n        let elementClass = this.settings.className;\n        $(this.element).addClass(elementClass);\n        $(\"<style>\").prop(\"type\", \"text/css\")\n                .html(`\n.${elementClass} {\n    font-family: Roboto,'Helvetica Neue',Helvetica,Arial,sans-serif;\n    width: ${this.settings.width + this.settings.breadcrumbWidth}px;\n}\n.${elementClass} .sunburst-breadcrumbs {\n    width: 176px;\n    float: right;\n    margin-right: 15px;\n    margin-top: 10px;\n    padding-left: 5px;\n}\n.${elementClass} .sunburst-breadcrumbs ul {\n    padding-left: 0;\n    list-style: none;\n}\n.${elementClass} .sunburst-breadcrumbs .crumb {\n    margin-bottom: 5px;\n    cursor: pointer;\n}\n.${elementClass} .sunburst-breadcrumbs .crumb svg {\n    float: left;\n    margin-right: 3px;\n}\n.${elementClass} .sunburst-breadcrumbs .crumb p {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    margin: 0;\n    font-size: 14px;\n}\n.${elementClass} .sunburst-breadcrumbs .crumb .percentage {\n    font-size: 11px;\n}`)\n                .appendTo(\"head\");\n    }\n\n    /** ****** private functions ********/\n    /**\n     * Adds data for the peptides on the self level\n     * Is called recursively\n     *\n     * @param <Array> children A list of children\n     * @param <int> count The number of peptides that should be the sum of the\n     *          children count\n     * @return <Array> The modified list of children\n     */\n    addEmptyChildren(children, count) {\n        for (let i = 0; i < children.length; i++) {\n            if (typeof children[i].children !== \"undefined\") {\n                children[i].children = this.addEmptyChildren(children[i].children, this.settings.countAccessor.call(null, children[i]));\n            }\n        }\n        if (children.length > 0 && count !== 0 && count !== undefined) {\n            children.push({\n                id: -1,\n                name: \"empty\",\n                data: {\n                    count: count,\n                    self_count: count,\n                },\n            });\n        }\n        return children;\n    }\n\n    /**\n     * Redraws the pancore graph\n     */\n    redraw() {\n        // clear everything\n        $(this.element).empty();\n\n        this.breadcrumbs = d3.select(this.element)\n            .append(\"div\")\n                .attr(\"id\", this.element.id + \"-breadcrumbs\")\n                .attr(\"class\", \"sunburst-breadcrumbs\")\n            .append(\"ul\");\n\n        this.x = d3.scale.linear().range([0, 2 * Math.PI]); // use full circle\n        this.y = d3.scale.linear().domain([0, 1]).range([0, this.settings.radius]);\n        this.currentMaxLevel = 4;\n\n        let vis = d3.select(this.element)\n            .append(\"svg\")\n            .attr(\"version\", \"1.1\")\n            .attr(\"xmlns\", \"http://www.w3.org/2000/svg\")\n            .attr(\"viewBox\", `0 0 ${this.settings.width + Sunburst.MARGIN.right + Sunburst.MARGIN.left} ${this.settings.height + Sunburst.MARGIN.top + Sunburst.MARGIN.bottom}`)\n            .attr(\"width\", this.settings.width + Sunburst.MARGIN.right + Sunburst.MARGIN.left)\n            .attr(\"height\", this.settings.height + Sunburst.MARGIN.top + Sunburst.MARGIN.bottom)\n            .attr(\"overflow\", \"hidden\")\n            .style(\"font-family\", \"'Helvetica Neue', Helvetica, Arial, sans-serif\");\n        vis.append(\"style\")\n            .attr(\"type\", \"text/css\")\n            .html(\".hidden{ visibility: hidden;}\");\n        vis = vis.append(\"g\")\n            .attr(\"transform\", \"translate(\" + this.settings.radius + \",\" + this.settings.radius + \")\"); // set origin to radius center\n\n        let partition = d3.layout.partition() // creates a new partition layout\n            .sort(null) // don't sort,  use tree traversal order\n            .value(this.settings.countAccessor); // set the size of the pieces\n\n        // calculate arcs out of partition coordinates\n        this.arc = d3.svg.arc()\n                .startAngle(d => Math.max(0, Math.min(2 * Math.PI, this.x(d.x))))\n                .endAngle(d => Math.max(0, Math.min(2 * Math.PI, this.x(d.x + d.dx))))\n                // prevent y-calculation on 0\n                .innerRadius(d => Math.max(0, d.y ? this.y(d.y) : d.y))\n                .outerRadius(d => Math.max(0, this.y(d.y + d.dy)) + 1);\n\n        // run the partition layout\n        let nodes = partition.nodes(this.data);\n\n        this.path = vis.selectAll(\"path\").data(nodes);\n        this.path.enter().append(\"path\") // for every node, draw an arc\n            .attr(\"class\", \"arc\")\n            .attr(\"id\", (d, i) => \"path-\" + i) // id based on index\n            .attr(\"d\", this.arc) // path data\n            .attr(\"fill-rule\", \"evenodd\") // fill rule\n            .style(\"fill\", d => this.colour(d, this)) // call function for colour\n            .on(\"click\", d => {\n                if (d.depth < this.currentMaxLevel) {\n                    this.click(d);\n                }\n            }) // call function on click\n            .on(\"mouseover\", (d, i) => this.tooltipIn(d, i))\n            .on(\"mousemove\", (d, i) => this.tooltipMove(d, i))\n            .on(\"mouseout\", (d, i) => this.tooltipOut(d, i));\n\n        // put labels on the nodes\n        this.text = vis.selectAll(\"text\").data(nodes);\n\n        // hack for the getComputedTextLength\n        let that = this;\n\n        this.text.enter().append(\"text\")\n            .style(\"fill\", d => Univis.getReadableColorFor(this.colour(d, this)))\n            .style(\"fill-opacity\", 0)\n            .style(\"font-family\", \"font-family: Helvetica, 'Super Sans', sans-serif\")\n            .style(\"pointer-events\", \"none\") // don't invoke mouse events\n            .attr(\"dy\", \".2em\")\n            .text(this.settings.getLabel)\n            .style(\"font-size\", function (d) {\n                return Math.floor(Math.min(((that.settings.radius / that.settings.levels) / this.getComputedTextLength() * 10) + 1, 12)) + \"px\";\n            });\n    }\n\n    /**\n     *  Interpolate the scales!\n     * Defines new scales based on the clicked item\n     *\n     * @param <Object> d The clicked item\n     * @return <Scale> new scales\n     */\n    arcTween(d, that) {\n        let my = Math.min(Sunburst.maxY(d), d.y + that.settings.levels * d.dy),\n            xd = d3.interpolate(that.x.domain(), [d.x, d.x + d.dx]),\n            yd = d3.interpolate(that.y.domain(), [d.y, my]),\n            yr = d3.interpolate(that.y.range(), [d.y ? 20 : 0, that.settings.radius]);\n        return d => function (t) {\n            that.x.domain(xd(t));\n            that.y.domain(yd(t)).range(yr(t));\n            return that.arc(d);\n        };\n    }\n\n    setBreadcrumbs(d) {\n        // breadcrumbs\n        let crumbs = [];\n        let temp = d;\n        while (temp) {\n            crumbs.push(temp);\n            temp = temp.parent;\n        }\n        crumbs.reverse().shift();\n        let breadArc = d3.svg.arc()\n            .innerRadius(0)\n            .outerRadius(15)\n            .startAngle(0)\n            .endAngle(d => 2 * Math.PI * d.data.count / d.parent.data.count);\n        let bc = this.breadcrumbs.selectAll(\".crumb\")\n            .data(crumbs);\n        bc.enter()\n            .append(\"li\")\n            .on(\"click\", d => {\n                this.click(d.parent);\n            })\n            .attr(\"class\", \"crumb\")\n            .style(\"opacity\", \"0\")\n            .attr(\"title\", this.settings.getTitleText)\n            .html(d => `\n<p class='name'>${d.name}</p>\n<p class='percentage'>${Math.round(100 * d.data.count / d.parent.data.count)}% of ${d.parent.name}</p>`)\n            .insert(\"svg\", \":first-child\").attr(\"width\", 30).attr(\"height\", 30)\n            .append(\"path\").attr(\"d\", breadArc).attr(\"transform\", \"translate(15, 15)\").attr(\"fill\", d => this.colour(d, this));\n        bc.transition()\n            .duration(this.settings.duration)\n            .style(\"opacity\", \"1\");\n        bc.exit().transition()\n            .duration(this.settings.duration)\n            .style(\"opacity\", \"0\")\n            .remove();\n    }\n\n    /**\n     * Defines what happens after a node is clicked\n     *\n     * @param <Object> d The data object of the clicked arc\n     */\n    click(d) {\n        if (d.name === \"empty\") {\n            return;\n        }\n\n        if (this.settings.enableBreadcrumbs) {\n            this.setBreadcrumbs(d);\n        }\n\n        if (this.settings.rerootCallback) {\n            this.settings.rerootCallback.call(null, d);\n        }\n\n        // perform animation\n        this.currentMaxLevel = d.depth + this.settings.levels;\n        this.path.transition()\n            .duration(this.settings.duration)\n            .attrTween(\"d\", this.arcTween(d, this))\n            .attr(\"class\", d => d.depth >= this.currentMaxLevel ? \"arc toHide\" : \"arc\")\n            .attr(\"fill-opacity\", d => d.depth >= this.currentMaxLevel ? 0.2 : 1);\n\n        let that = this;\n\n        // Somewhat of a hack as we rely on arcTween updating the scales.\n        this.text\n            .style(\"visibility\", function (e) {\n                return Sunburst.isParentOf(d, e, that.currentMaxLevel) ? null : d3.select(this).style(\"visibility\");\n            })\n            .transition().duration(this.settings.duration)\n            .attrTween(\"text-anchor\", d => function () {\n                return that.x(d.x + d.dx / 2) > Math.PI ? \"end\" : \"start\";\n            })\n            .attrTween(\"dx\", d => function () {\n                return that.x(d.x + d.dx / 2) > Math.PI ? \"-4px\" : \"4px\";\n            })\n            .attrTween(\"transform\", d => function () {\n                let angle = that.x(d.x + d.dx / 2) * 180 / Math.PI - 90;\n                return `rotate(${angle})translate(${that.y(d.y)})rotate(${angle > 90 ? -180 : 0})`;\n            })\n            .style(\"fill-opacity\", e => Sunburst.isParentOf(d, e, that.currentMaxLevel) ? 1 : 1e-6)\n            .each(\"end\", function (e) {\n                d3.select(this).style(\"visibility\", Sunburst.isParentOf(d, e, that.currentMaxLevel) ? null : \"hidden\");\n            });\n    }\n\n\n    /**\n     * Calculates the color of an arc based on the color of his children\n     *\n     * @param <Object> d The node for which we want the color\n     * @return <Color> The calculated color\n     */\n    colour(d, that) {\n        if (d.name === \"empty\") {\n            return \"white\";\n        }\n        if (that.settings.useFixedColors) {\n            return that.settings.fixedColors[Math.abs(Univis.stringHash(d.name + \" \" + d.data.rank)) % that.settings.fixedColors.length];\n        } else {\n            if (d.children) {\n                let colours = d.children.map(c => that.colour(c, that)),\n                    a = d3.hsl(colours[0]),\n                    b = d3.hsl(colours[1]),\n                    singleChild = d.children.length === 1 || d.children[1].name === \"empty\";\n                // if we only have one child, return a slightly darker variant of the child color\n                if (singleChild) {\n                    return d3.hsl(a.h, a.s, a.l * 0.98);\n                }\n                // if we have 2 children or more, take the average of the first two children\n                return d3.hsl((a.h + b.h) / 2, (a.s + b.s) / 2, (a.l + b.l) / 2);\n            }\n            // if we don't have children, pick a new color\n            if (!d.color) {\n                d.color = that.getColor();\n            }\n            return d.color;\n        }\n    }\n\n    /**\n     * color generation function\n     * iterates over fixed list of colors\n     *\n     * @return <Color> The generated color\n     */\n    getColor() {\n        this.colorCounter = (this.colorCounter + 1) % this.settings.colors.length;\n        return this.settings.colors[this.colorCounter];\n    }\n\n    // tooltip functions\n    tooltipIn(d, i) {\n        if (!this.settings.enableTooltips) {\n            return;\n        }\n        if (d.depth < this.currentMaxLevel && d.name !== \"empty\") {\n            this.tooltip.html(this.settings.getTooltip(d))\n                .style(\"top\", (d3.event.pageY - 5) + \"px\")\n                .style(\"left\", (d3.event.pageX + 15) + \"px\")\n                .style(\"visibility\", \"visible\");\n        }\n    }\n\n    tooltipOut(d, i) {\n        if (!this.settings.enableTooltips) {\n            return;\n        }\n        this.tooltip.style(\"visibility\", \"hidden\");\n    }\n\n    tooltipMove(d, i) {\n        if (!this.settings.enableTooltips) {\n            return;\n        }\n        this.tooltip.style(\"top\", (d3.event.pageY - 5) + \"px\")\n            .style(\"left\", (d3.event.pageX + 15) + \"px\");\n    }\n\n    getTooltip(d) {\n        return `<h3 class='tip-title'>${this.settings.getTooltipTitle(d)}</h3><p>${this.settings.getTooltipText(d)}</p>`;\n    }\n\n    /** ****** util methods *************/\n    /**\n     * Calculates if p is a parent of c\n     * Returns true is label must be drawn\n     */\n    static isParentOf(p, c, ml) {\n        if (c.depth >= ml) {\n            return false;\n        }\n        if (p === c) {\n            return true;\n        }\n        if (p.children) {\n            return p.children.some(function (d) {\n                return Sunburst.isParentOf(d, c, ml);\n            });\n        }\n        return false;\n    }\n\n    /**\n     * calculate the max-y of the clicked item\n     *\n     * @param <Object> d The clicked item\n     * @return <Number> The maximal y-value\n     */\n    static maxY(d) {\n        return d.children ? Math.max(...d.children.map(Sunburst.maxY)) : d.y + d.dy;\n    }\n\n    /** ****** class constants **********/\n\n    static get MARGIN() {\n        return {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n        };\n    }\n\n    static get COLORS() {\n        return [\"#f9f0ab\", \"#e8e596\", \"#f0e2a3\", \"#ede487\", \"#efd580\", \"#f1cb82\", \"#f1c298\", \"#e8b598\", \"#d5dda1\", \"#c9d2b5\", \"#aec1ad\", \"#a7b8a8\", \"#b49a3d\", \"#b28647\", \"#a97d32\", \"#b68334\", \"#d6a680\", \"#dfad70\", \"#a2765d\", \"#9f6652\", \"#b9763f\", \"#bf6e5d\", \"#af643c\", \"#9b4c3f\", \"#72659d\", \"#8a6e9e\", \"#8f5c85\", \"#934b8b\", \"#9d4e87\", \"#92538c\", \"#8b6397\", \"#716084\", \"#2e6093\", \"#3a5988\", \"#4a5072\", \"#393e64\", \"#aaa1cc\", \"#e0b5c9\", \"#e098b0\", \"#ee82a2\", \"#ef91ac\", \"#eda994\", \"#eeb798\", \"#ecc099\", \"#f6d5aa\", \"#f0d48a\", \"#efd95f\", \"#eee469\", \"#dbdc7f\", \"#dfd961\", \"#ebe378\", \"#f5e351\"];\n    }\n\n    static get FIXED_COLORS() {\n        return [\"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\", \"#393b79\", \"#5254a3\", \"#6b6ecf\", \"#9c9ede\", \"#637939\", \"#8ca252\", \"#b5cf6b\", \"#cedb9c\", \"#8c6d31\", \"#bd9e39\", \"#e7ba52\", \"#e7cb94\", \"#843c39\", \"#ad494a\", \"#d6616b\", \"#e7969c\", \"#7b4173\", \"#a55194\", \"#ce6dbd\", \"#de9ed6\", \"#3182bd\", \"#6baed6\", \"#9ecae1\", \"#c6dbef\", \"#e6550d\", \"#fd8d3c\", \"#fdae6b\", \"#fdd0a2\", \"#31a354\", \"#74c476\", \"#a1d99b\", \"#c7e9c0\", \"#756bb1\", \"#9e9ac8\", \"#bcbddc\", \"#dadaeb\", \"#636363\", \"#969696\", \"#bdbdbd\", \"#d9d9d9\"];\n    }\n\n    get DEFAULTS() {\n        return {\n            height: 600,\n            width: 600,\n            breadcrumbWidth: 200,\n            radius: 300,\n\n            className: \"unipept-sunburst\",\n            levels: 4,\n            getLevel: d => d.getDepth(),\n\n            duration: 1000,\n            colors: Sunburst.COLORS,\n            fixedColors: Sunburst.FIXED_COLORS,\n            useFixedColors: false,\n\n            countAccessor: d => d.data.self_count,\n            rerootCallback: undefined,\n\n            getLabel: d => d.name === \"empty\" ? \"\" : d.name,\n\n            enableTooltips: true,\n            getTooltip: d => this.getTooltip.call(this, d),\n            getTooltipTitle: Univis.getTooltipTitle,\n            getTooltipText: Univis.getTooltipText,\n\n            enableBreadcrumbs: true,\n            getTitleText: d => this.settings.getLabel(d),\n        };\n    }\n\n    /** ************* Public methods ***************/\n\n    /**\n     * Resets the sunburst to its initial position\n     */\n    reset() {\n        this.click(this.data);\n    }\n\n    /**\n     * redraws the colors of the sunburst\n     */\n    redrawColors() {\n        d3.selectAll(\".crumb path\").transition()\n            .style(\"fill\", d => this.colour(d, this));\n        this.path.transition()\n            .style(\"fill\", d => this.colour(d, this));\n        this.text.transition()\n            .style(\"fill\", d => Univis.getReadableColorFor(this.colour(d, this)));\n    }\n\n    /**\n     * Sets the visualisation in full screen mode\n     *\n     * @param <boolean> isFullScreen indicates if we're in full screen mode\n     */\n    setFullScreen(isFullScreen) {\n        // the delay is because the event fires before we're in fullscreen\n        // so the height en width functions don't give a correct result\n        // without the delay\n        setTimeout(() => {\n            let size = this.settings.width;\n            if (isFullScreen) {\n                size = Math.min($(window).height() - 44, $(window).width() - 250);\n            }\n            $(this.element).children(\"svg\")\n                .attr(\"width\", size)\n                .attr(\"height\", size);\n        }, 1000);\n    }\n}\n\n$.fn.sunburst = function (data, options) {\n    return new Sunburst(this.get(0), data, options);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/sunburst/sunburst.js","import Node from \"../shared/node\";\n\nexport default class SunburstNode extends Node {\n    static new(node = {}) {\n        return new SunburstNode(node);\n    }\n\n    static createNode(node) {\n        return Node.createNode(node, SunburstNode.new);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/sunburst/sunburstNode.js"],"sourceRoot":""}