{"version":3,"sources":["webpack:///webpack/bootstrap 50390940b2f539915fd7","webpack:///./src/index.js","webpack:///./src/treeview.js","webpack:///./src/node.js","webpack:///./src/treemap.js"],"names":["TreeView","element","data","options","that","MARGIN","top","right","bottom","left","DURATION","COLOR_SCALE","d3","scale","category10","DEFAULTS","height","width","nodeDistance","levelsToExpand","minNodeSize","maxNodeSize","countAccessor","d","count","colors","name","nodeFillColor","nodeStrokeColor","linkStrokeColor","enableInnerArcs","enableExpandOnClick","enableRightClick","enableLabels","getLabel","enableTooltips","getTooltip","getTooltipTitle","getTooltipText","settings","visibleRoot","tooltipTimer","nodeId","root","tree","tooltip","diagonal","widthScale","innerArc","zoomListener","svg","init","initTooltip","initInnerArcs","layout","nodeSize","separation","a","b","distance","parent","projection","y","x","linear","range","behavior","zoom","scaleExtent","on","attr","event","translate","select","append","call","draw","TreeviewNode","createNode","id","style","arcScale","Math","PI","arc","outerRadius","startAngle","endAngle","self_count","domain","x0","y0","setSelected","children","forEach","i","color","functor","setRecursiveProperty","collapseAll","expand","expandAll","update","centerNode","source","nodes","reverse","links","depth","node","selectAll","nodeEnter","enter","click","tooltipIn","tooltipOut","rightClick","isLeaf","text","nodeUpdate","transition","duration","_children","nodeExit","exit","remove","link","target","insert","o","selected","defaultPrevented","shiftKey","collapse","reroot","preventDefault","html","pageY","pageX","setTimeout","clearTimeout","setCount","reduce","sum","c","value","length","new","reset","Plugin","userData","option","each","$this","$","extend","fn","treeview","Constructor","Node","property","_height","undefined","max","getHeight","_depth","getDepth","construct","map","n","TreeMap","className","levels","getLevel","rerootCallback","getBreadcrumbTooltip","colorRoot","colorLeaf","colorBreadcrumbs","labelHeight","current","treemapLayout","breadcrumbs","treemap","colorScale","TreemapNode","initCSS","elementClass","addClass","prop","appendTo","empty","size","padding","interpolate","interpolateLab","setBreadcrumbs","crumbs","temp","push","triggerCallback","getReadableColorFor","tooltipMove","order","position","dx","dy","resize","textColor","brightness","rgb","err","r","g","setFullScreen","isFullScreen","w","h","window"],"mappings":"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","file":"unipept-visualizations.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 50390940b2f539915fd7","import TreeView from \"./treeview\";\nimport TreeMap from \"./treemap\";\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/**\n * Zoomable treeview, inspiration from\n * - http://bl.ocks.org/mbostock/4339083\n * - https://gist.github.com/robschmuecker/7880033\n * - http://www.brightpointinc.com/interactive/budget/index.html?source=d3js\n */\nimport Node from \"./node\";\n\nexport default function TreeView(element, data, options = {}) {\n    let that = {};\n\n    const MARGIN = {\n            top: 5,\n            right: 5,\n            bottom: 5,\n            left: 5,\n        },\n        DURATION = 750,\n        COLOR_SCALE = d3.scale.category10(),\n        DEFAULTS = {\n            height: 300,\n            width: 600,\n            nodeDistance: 180,\n            levelsToExpand: 2,\n            minNodeSize: 2,\n            maxNodeSize: 105,\n\n            countAccessor: d => d.data.count,\n\n            colors: d => COLOR_SCALE(d.name),\n            nodeFillColor: nodeFillColor,\n            nodeStrokeColor: nodeStrokeColor,\n            linkStrokeColor: linkStrokeColor,\n\n            enableInnerArcs: true,\n            enableExpandOnClick: true,\n            enableRightClick: true,\n\n            enableLabels: true,\n            getLabel: d => d.name,\n\n            enableTooltips: true,\n            getTooltip: getTooltip,\n            getTooltipTitle: getTooltipTitle,\n            getTooltipText: getTooltipText,\n        };\n\n    let settings;\n\n    let visibleRoot,\n        tooltipTimer;\n\n    let nodeId = 0,\n        root;\n\n    let tree,\n        tooltip,\n        diagonal,\n        widthScale,\n        innerArc,\n        zoomListener,\n        svg;\n\n    function init() {\n        settings = Object.assign({}, DEFAULTS, options);\n\n        settings.width = settings.width - MARGIN.right - MARGIN.left;\n        settings.height = settings.height - MARGIN.top - MARGIN.bottom;\n\n        if (settings.enableTooltips) {\n            initTooltip();\n        }\n\n        if (settings.enableInnerArcs) {\n            initInnerArcs();\n        }\n\n        tree = d3.layout.tree()\n                .nodeSize([2, 10])\n                .separation((a, b) => {\n                    let width = (nodeSize(a) + nodeSize(b)),\n                        distance = width / 2 + 4;\n                    return (a.parent === b.parent) ? distance : distance + 4;\n                });\n\n        diagonal = d3.svg.diagonal().projection(d => [d.y, d.x]);\n\n        widthScale = d3.scale.linear().range([settings.minNodeSize, settings.maxNodeSize]);\n\n            // define the zoomListener which calls the zoom function on the \"zoom\" event constrained within the scaleExtents\n        zoomListener = d3.behavior.zoom()\n                .scaleExtent([0.1, 3])\n                .on(\"zoom\", () => {\n                    svg.attr(\"transform\", `translate(${d3.event.translate})scale(${d3.event.scale})`);\n                });\n\n        svg = d3.select(element).append(\"svg\")\n                .attr(\"version\", \"1.1\")\n                .attr(\"xmlns\", \"http://www.w3.org/2000/svg\")\n                .attr(\"viewBox\", `0 0 ${settings.width + MARGIN.right + MARGIN.left} ${settings.height + MARGIN.top + MARGIN.bottom}`)\n                .attr(\"width\", settings.width + MARGIN.right + MARGIN.left)\n                .attr(\"height\", settings.height + MARGIN.top + MARGIN.bottom)\n                .call(zoomListener)\n                .append(\"g\")\n                .attr(\"transform\", `translate(${MARGIN.left},${MARGIN.top})`)\n                .append(\"g\");\n\n        draw(TreeviewNode.createNode(data));\n    }\n\n    function initTooltip() {\n        tooltip = d3.select(\"body\")\n                .append(\"div\")\n                .attr(\"id\", element.id + \"-tooltip\")\n                .attr(\"class\", \"tip\")\n                .style(\"position\", \"absolute\")\n                .style(\"z-index\", \"10\")\n                .style(\"visibility\", \"hidden\")\n                .style(\"background-color\", \"white\")\n                .style(\"padding\", \"2px\")\n                .style(\"border\", \"1px solid #dddddd\")\n                .style(\"border-radius\", \"3px;\");\n    }\n\n    function initInnerArcs() {\n        let arcScale = d3.scale.linear().range([0, 2 * Math.PI]);\n\n        innerArc = d3.svg.arc()\n                .outerRadius(nodeSize)\n                .startAngle(0)\n                .endAngle(d => arcScale(d.data.self_count / d.data.count) || 0);\n    }\n\n    function draw(data) {\n        widthScale.domain([0, data.data.count]);\n\n        root = data;\n        root.x0 = settings.height / 2;\n        root.y0 = 0;\n\n            // set everything visible\n        root.setSelected(true);\n\n        root.children.forEach((d, i) => {\n            d.color = d3.functor(settings.colors).call(this, d, i);\n            d.setRecursiveProperty(\"color\", d.color);\n        });\n\n        if (settings.enableExpandOnClick) {\n            root.collapseAll();\n            root.expand();\n        } else {\n            root.expandAll();\n        }\n\n        update(root);\n        centerNode(root);\n    }\n\n    function update(source) {\n            // Compute the new tree layout.\n        let nodes = tree.nodes(root).reverse(),\n            links = tree.links(nodes);\n\n            // Normalize for fixed-depth.\n        nodes.forEach(d => {\n            d.y = d.depth * settings.nodeDistance;\n        });\n\n            // Update the nodes…\n        let node = svg.selectAll(\"g.node\")\n                .data(nodes, d => d.id || (d.id = ++nodeId));\n\n            // Enter any new nodes at the parent's previous position.\n        let nodeEnter = node.enter().append(\"g\")\n                .attr(\"class\", \"node\")\n                .style(\"cursor\", \"pointer\")\n                .attr(\"transform\", d => `translate(${source.y || 0},${source.x0 || 0})`)\n                .on(\"click\", click)\n                .on(\"mouseover\", tooltipIn)\n                .on(\"mouseout\", tooltipOut)\n                .on(\"contextmenu\", rightClick);\n\n        nodeEnter.append(\"circle\")\n                .attr(\"r\", 1e-6)\n                .style(\"stroke-width\", \"1.5px\")\n                .style(\"stroke\", settings.nodeStrokeColor)\n                .style(\"fill\", settings.nodeFillColor);\n\n        if (settings.enableInnerArcs) {\n            nodeEnter.append(\"path\")\n                    .attr(\"d\", innerArc)\n                    .style(\"fill\", settings.nodeStrokeColor)\n                    .style(\"fill-opacity\", 0);\n        }\n\n        if (settings.enableLabels) {\n            nodeEnter.append(\"text\")\n                    .attr(\"x\", d => d.isLeaf() ? 10 : -10)\n                    .attr(\"dy\", \".35em\")\n                    .attr(\"text-anchor\", d => d.isLeaf() ? \"start\" : \"end\")\n                    .text(settings.getLabel)\n                    .style(\"font\", \"10px sans-serif\")\n                    .style(\"fill-opacity\", 1e-6);\n        }\n\n            // Transition nodes to their new position.\n        let nodeUpdate = node.transition()\n                .duration(DURATION)\n                .attr(\"transform\", d => `translate(${d.y},${d.x})`);\n\n        nodeUpdate.select(\"circle\")\n                .attr(\"r\", nodeSize)\n                .style(\"fill-opacity\", d => d._children ? 1 : 0)\n                .style(\"stroke\", settings.nodeStrokeColor)\n                .style(\"fill\", settings.nodeFillColor);\n\n        if (settings.enableLabels) {\n            nodeUpdate.select(\"text\")\n                    .style(\"fill-opacity\", 1);\n        }\n\n        if (settings.enableInnerArcs) {\n            nodeUpdate.select(\"path\")\n                    .duration(DURATION)\n                    .attr(\"d\", innerArc)\n                    .style(\"fill-opacity\", 0.8);\n        }\n\n            // Transition exiting nodes to the parent's new position.\n        let nodeExit = node.exit().transition()\n                .duration(DURATION)\n                .attr(\"transform\", d => `translate(${source.y},${source.x})`)\n                .remove();\n\n        nodeExit.select(\"circle\")\n                .attr(\"r\", 1e-6);\n\n        nodeExit.select(\"path\")\n                .style(\"fill-opacity\", 1e-6);\n\n        nodeExit.select(\"text\")\n                .style(\"fill-opacity\", 1e-6);\n\n            // Update the links…\n        let link = svg.selectAll(\"path.link\")\n                .data(links, d => d.target.id);\n\n            // Enter any new links at the parent's previous position.\n        link.enter().insert(\"path\", \"g\")\n                .attr(\"class\", \"link\")\n                .style(\"fill\", \"none\")\n                .style(\"stroke-opacity\", \"0.5\")\n                .style(\"stroke-linecap\", \"round\")\n                .style(\"stroke\", settings.linkStrokeColor)\n                .style(\"stroke-width\", 1e-6)\n                .attr(\"d\", d => {\n                    let o = {\n                        x: (source.x0 || 0),\n                        y: (source.y0 || 0),\n                    };\n                    return diagonal({\n                        source: o,\n                        target: o,\n                    });\n                });\n\n            // Transition links to their new position.\n        link.transition()\n                .duration(DURATION)\n                .attr(\"d\", diagonal)\n                .style(\"stroke\", settings.linkStrokeColor)\n                .style(\"stroke-width\", d => {\n                    if (d.source.selected) {\n                        return widthScale(d.target.data.count) + \"px\";\n                    } else {\n                        return \"4px\";\n                    }\n                });\n\n            // Transition exiting nodes to the parent's new position.\n        link.exit().transition()\n                .duration(DURATION)\n                .style(\"stroke-width\", 1e-6)\n                .attr(\"d\", d => {\n                    let o = {\n                        x: source.x,\n                        y: source.y,\n                    };\n                    return diagonal({\n                        source: o,\n                        target: o,\n                    });\n                })\n                .remove();\n\n            // Stash the old positions for transition.\n        nodes.forEach(d => {\n            [d.x0, d.y0] = [d.x, d.y];\n        });\n    }\n\n    function nodeSize(d) {\n        if (d.selected) {\n            return widthScale(d.data.count) / 2;\n        } else {\n            return 2;\n        }\n    }\n\n        // Toggle children on click.\n    function click(d) {\n        if (!settings.enableExpandOnClick) {\n            return;\n        }\n\n            // check if click is triggered by panning on a node\n        if (d3.event.defaultPrevented) {\n            return;\n        }\n\n        if (d3.event.shiftKey) {\n            d.expandAll();\n        } else if (d.children) {\n            d.collapse();\n        } else {\n            d.expand();\n        }\n        update(d);\n        centerNode(d);\n    }\n\n    function rightClick(d) {\n        if (settings.enableRightClick) {\n            reroot(d);\n        }\n    }\n\n        // Sets the width of the right clicked node to 100%\n    function reroot(d) {\n        if (d === visibleRoot && d !== root) {\n            reroot(root);\n            return;\n        }\n        visibleRoot = d;\n\n            // set Selection properties\n        root.setSelected(false);\n        d.setSelected(true);\n\n            // scale the lines\n        widthScale.domain([0, d.data.count]);\n\n        d.expand();\n\n            // redraw\n        if (d3.event !== null) {\n            d3.event.preventDefault();\n        }\n        update(d);\n        centerNode(d);\n    }\n\n        // Center a node\n    function centerNode(source) {\n        let scale = zoomListener.scale(),\n            [x, y] = [-source.y0, -source.x0];\n        x = x * scale + settings.width / 4;\n        y = y * scale + settings.height / 2;\n        svg.transition()\n                .duration(DURATION)\n                .attr(\"transform\", `translate(${x},${y})scale(${scale})`);\n        zoomListener.scale(scale);\n        zoomListener.translate([x, y]);\n    }\n\n        // tooltip functions\n    function tooltipIn(d, i) {\n        if (!settings.enableTooltips) {\n            return;\n        }\n        tooltip.html(settings.getTooltip(d))\n                .style(\"top\", (d3.event.pageY - 5) + \"px\")\n                .style(\"left\", (d3.event.pageX + 15) + \"px\");\n\n        tooltipTimer = setTimeout(() => {\n            tooltip.style(\"visibility\", \"visible\");\n        }, 1000);\n    }\n\n    function tooltipOut(d, i) {\n        if (!settings.enableTooltips) {\n            return;\n        }\n        clearTimeout(tooltipTimer);\n        tooltip.style(\"visibility\", \"hidden\");\n    }\n\n        /** ************ Default methods ***************/\n        // set fill color\n    function nodeFillColor(d) {\n        if (d.selected) {\n            return d._children ? d.color || \"#aaa\" : \"#fff\";\n        } else {\n            return \"#aaa\";\n        }\n    }\n\n        // set node stroke color\n    function nodeStrokeColor(d) {\n        if (d.selected) {\n            return d.color || \"#aaa\";\n        } else {\n            return \"#aaa\";\n        }\n    }\n\n        // set link stroke color\n    function linkStrokeColor(d) {\n        if (d.source.selected) {\n            return d.target.color;\n        } else {\n            return \"#aaa\";\n        }\n    }\n\n    function getTooltip(d) {\n        return `<h3 class='tip-title'>${settings.getTooltipTitle(d)}</h3><p>${settings.getTooltipText(d)}</p>`;\n    }\n\n    function getTooltipTitle(d) {\n        return d.name;\n    }\n\n    function getTooltipText(d) {\n        return `${d.data.count} hits`;\n    }\n\n    class TreeviewNode extends Node {\n        constructor(node = {}) {\n            super(node);\n            this.setCount();\n        }\n\n        static new(node = {}) {\n            return new TreeviewNode(node);\n        }\n\n        static createNode(node) {\n            return Node.createNode(node, TreeviewNode.new);\n        }\n\n        setCount() {\n            if (settings.countAccessor(this)) {\n                this.data.count = settings.countAccessor(this);\n            } else if (this.children) {\n                this.data.count = this.children.reduce((sum, c) => sum + c.data.count, 0);\n            } else {\n                this.data.count = 0;\n            }\n        }\n\n        setSelected(value) {\n            this.setRecursiveProperty(\"selected\", value);\n        }\n\n            // collapse everything\n        collapseAll() {\n            if (this.children && this.children.length === 0) {\n                this.children = null;\n            }\n            if (this.children) {\n                this._children = this.children;\n                this._children.forEach(c => {\n                    c.collapseAll();\n                });\n                this.children = null;\n            }\n        }\n\n            // Collapses a node\n        collapse() {\n            if (this.children) {\n                this._children = this.children;\n                this.children = null;\n            }\n        }\n\n        expandAll() {\n            this.expand(100);\n        }\n\n            // Expands a node and its children\n        expand(i = settings.levelsToExpand) {\n            if (i > 0) {\n                if (this._children) {\n                    this.children = this._children;\n                    this._children = null;\n                }\n                if (this.children) {\n                    this.children.forEach(c => {\n                        c.expand(i - 1);\n                    });\n                }\n            }\n        }\n        }\n\n        /** ************* Public methods ***************/\n    that.reset = function reset() {\n        zoomListener.scale(1);\n        reroot(root);\n    };\n\n        // initialize the object\n    init();\n\n        // return the object\n    return that;\n}\n\nfunction Plugin(userData, option) {\n    return this.each(function () {\n        let $this = $(this);\n        let data = $this.data(\"vis.treeview\");\n        let options = $.extend({}, $this.data(), typeof option === \"object\" && option);\n\n        if (!data) {\n            $this.data(\"vis.treeview\", (data = new TreeView(this, userData, options)));\n        }\n        if (typeof option === \"string\") {\n            data[option]();\n        }\n    });\n}\n\n$.fn.treeview = Plugin;\n$.fn.treeview.Constructor = TreeView;\n\n\n\n// WEBPACK FOOTER //\n// ./src/treeview.js","export default class Node {\n    constructor(node = {}) {\n        this.data = {};\n        Object.assign(this, node);\n    }\n\n    static new(node = {}) {\n        return new Node(node);\n    }\n\n    static createNode(node, construct = Node.new) {\n        if (node.children) {\n            node.children = node.children.map(\n                n => Node.createNode(n, construct)\n            );\n        }\n        return construct.call(null, node);\n    }\n\n    // sets a property for a node and all its children\n    setRecursiveProperty(property, value) {\n        this[property] = value;\n        if (this.children) {\n            this.children.forEach(c => {\n                c.setRecursiveProperty(property, value);\n            });\n        } else if (this._children) {\n            this._children.forEach(c => {\n                c.setRecursiveProperty(property, value);\n            });\n        }\n    }\n\n    // Returns true if a node is a leaf\n    isLeaf() {\n        return (!this.children && !this._children) ||\n            (this.children && this.children.length === 0) ||\n            (this._children && this._children.length === 0);\n    }\n\n    getHeight() {\n        if (this._height === undefined) {\n            if (this.isLeaf()) {\n                this._height = 0;\n            } else {\n                this._height = d3.max(this.children, c => c.getHeight()) + 1;\n            }\n        }\n        return this._height;\n    }\n\n    getDepth() {\n        if (this._depth === undefined) {\n            if (this.parent === undefined) {\n                this._depth = 0;\n            } else {\n                this._depth = this.parent.getDepth() + 1;\n            }\n        }\n        return this._depth;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/node.js","/**\n * Interactive treemap\n */\nimport Node from \"./node\";\n\nexport default function TreeMap(element, data, options = {}) {\n    let that = {};\n\n    const MARGIN = {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n        },\n        DEFAULTS = {\n            height: 300,\n            width: 600,\n\n            className: \"unipept-treemap\",\n            levels: undefined,\n            getLevel: d => d.getDepth(),\n\n            countAccessor: d => d.data.self_count,\n            rerootCallback: undefined,\n\n            getBreadcrumbTooltip: d => d.name,\n            colorRoot: \"#104B7D\",\n            colorLeaf: \"#fdffcc\",\n            colorBreadcrumbs: \"#FF8F00\",\n\n            labelHeight: 10,\n            getLabel: d => d.name,\n\n            enableTooltips: true,\n            getTooltip: getTooltip,\n            getTooltipTitle: getTooltipTitle,\n            getTooltipText: getTooltipText,\n        };\n\n    let settings;\n\n    let root,\n        nodeId = 0,\n        current,\n        treemapLayout,\n        breadcrumbs,\n        treemap,\n        tooltip,\n        colorScale;\n\n        /**\n         * Initializes Treemap\n         */\n    function init() {\n        settings = Object.assign({}, DEFAULTS, options);\n\n        root = TreemapNode.createNode(data);\n\n        settings.width = settings.width - MARGIN.right - MARGIN.left;\n        settings.height = settings.height - MARGIN.top - MARGIN.bottom;\n\n        settings.levels = settings.levels || root.getHeight();\n\n        if (settings.enableTooltips) {\n            initTooltip();\n        }\n\n        initCSS();\n\n            // setup the visualisation\n        draw(root);\n        reroot(root, false);\n    }\n\n    function initTooltip() {\n        tooltip = d3.select(\"body\")\n                .append(\"div\")\n                .attr(\"id\", element.id + \"-tooltip\")\n                .attr(\"class\", \"tip\")\n                .style(\"position\", \"absolute\")\n                .style(\"z-index\", \"10\")\n                .style(\"visibility\", \"hidden\")\n                .style(\"background-color\", \"white\")\n                .style(\"padding\", \"2px\")\n                .style(\"border\", \"1px solid #dddddd\")\n                .style(\"border-radius\", \"3px;\");\n    }\n\n    function initCSS() {\n        let elementClass = settings.className;\n        $(element).addClass(elementClass);\n        $(\"<style>\").prop(\"type\", \"text/css\")\n                .html(`\n                    .${elementClass} {\n                        font-family: Roboto,'Helvetica Neue',Helvetica,Arial,sans-serif;\n                    }\n                    .${elementClass} .node {\n                        font-size: 9px;\n                        line-height: 10px;\n                        overflow: hidden;\n                        position: absolute;\n                        text-indent: 2px;\n                        text-align: center;\n                        text-overflow: ellipsis;\n                        cursor: pointer;\n                    }\n                    .${elementClass} .node:hover {\n                        outline: 1px solid white;\n                    }\n                    .${elementClass} .breadcrumbs {\n                        font-size: 11px;\n                        line-height: 20px;\n                        padding-left: 5px;\n                        font-weight: bold;\n                        color: white;\n                        box-sizing: border-box;\n                    }\n                    .full-screen .${elementClass} .breadcrumbs {\n                        width: 100% !important;\n                    }\n                    .${elementClass} .crumb {\n                        cursor: pointer;\n                    }\n                    .${elementClass} .crumb .link:hover {\n                        text-decoration: underline;\n                    }\n                    .${elementClass} .breadcrumbs .crumb + .crumb::before {\n                        content: \" > \";\n                        cursor: default;\n                    }\n                `)\n                .appendTo(\"head\");\n    }\n\n    function draw(data) {\n        $(element).empty();\n\n        treemapLayout = d3.layout.treemap()\n                .size([settings.width + 1, settings.height + 1])\n                .padding([settings.labelHeight, 0, 0, 0])\n                .value(settings.countAccessor);\n\n        colorScale = d3.scale.linear()\n                .domain([0, settings.levels])\n                .range([settings.colorRoot, settings.colorLeaf])\n                .interpolate(d3.interpolateLab);\n\n        breadcrumbs = d3.select(element).append(\"div\")\n                .attr(\"class\", \"breadcrumbs\")\n                .style(\"position\", \"relative\")\n                .style(\"width\", settings.width + \"px\")\n                .style(\"height\", \"20px\")\n                .style(\"background-color\", settings.colorBreadcrumbs);\n\n        treemap = d3.select(element).append(\"div\")\n                .style(\"position\", \"relative\")\n                .style(\"width\", settings.width + \"px\")\n                .style(\"height\", settings.height + \"px\")\n                .style(\"left\", MARGIN.left + \"px\")\n                .style(\"top\", MARGIN.top + \"px\");\n    }\n\n    function setBreadcrumbs() {\n        let crumbs = [];\n        let temp = current;\n        while (temp) {\n            crumbs.push(temp);\n            temp = temp.parent;\n        }\n        crumbs.reverse();\n        breadcrumbs.html(\"\");\n        breadcrumbs.selectAll(\".crumb\")\n                .data(crumbs)\n                .enter()\n                .append(\"span\")\n                .attr(\"class\", \"crumb\")\n                .attr(\"title\", settings.getBreadcrumbTooltip)\n                .html(d => `<span class='link'>${d.name}</span>`)\n                .on(\"click\", d => {\n                    reroot(d);\n                });\n    }\n\n    function reroot(data, triggerCallback = true) {\n        current = data;\n\n        setBreadcrumbs();\n\n        let nodes = treemap.selectAll(\".node\")\n                .data(treemapLayout.nodes(data), d => d.id || (d.id = ++nodeId));\n\n        nodes.enter()\n                .append(\"div\")\n                .attr(\"class\", \"node\")\n                .style(\"background\", d => colorScale(settings.getLevel(d)))\n                .style(\"color\", d => getReadableColorFor(colorScale(settings.getLevel(d))))\n                .style(\"left\", \"0px\")\n                .style(\"top\", \"0px\")\n                .style(\"width\", \"0px\")\n                .style(\"height\", \"0px\")\n                .text(settings.getLabel)\n                .on(\"click\", d => {\n                    reroot(d);\n                })\n                .on(\"contextmenu\", d => {\n                    d3.event.preventDefault();\n                    if (current.parent) {\n                        reroot(current.parent);\n                    }\n                })\n                .on(\"mouseover\", tooltipIn)\n                .on(\"mousemove\", tooltipMove)\n                .on(\"mouseout\", tooltipOut);\n\n        nodes.order()\n                .transition()\n                .call(position);\n\n        nodes.exit().remove();\n\n        if (triggerCallback && settings.rerootCallback) {\n            settings.rerootCallback.call(null, current);\n        }\n    }\n\n    function update() {\n        let nodes = treemap.selectAll(\".node\")\n                .data(treemapLayout.nodes(data), d => d.id)\n                .order()\n                .transition()\n                .call(position);\n    }\n\n        /**\n         * sets the position of a square\n         */\n    function position() {\n        this.style(\"left\", d => d.x + \"px\")\n                .style(\"top\", d => d.y + \"px\")\n                .style(\"width\", d => Math.max(0, d.dx - 1) + \"px\")\n                .style(\"height\", d => Math.max(0, d.dy - 1) + \"px\");\n    }\n\n        /**\n         * Resizes the treemap for a given width and height\n         */\n    function resize(width, height) {\n        treemapLayout = d3.layout.treemap()\n                .size([width + 1, height + 1])\n                .padding([10, 0, 0, 0])\n                .value(settings.countAccessor);\n        update();\n    }\n\n        // tooltip functions\n    function tooltipIn(d, i) {\n        if (!settings.enableTooltips) {\n            return;\n        }\n        tooltip.html(settings.getTooltip(d))\n                .style(\"top\", (d3.event.pageY - 5) + \"px\")\n                .style(\"left\", (d3.event.pageX + 15) + \"px\")\n                .style(\"visibility\", \"visible\");\n    }\n\n    function tooltipOut(d, i) {\n        if (!settings.enableTooltips) {\n            return;\n        }\n        tooltip.style(\"visibility\", \"hidden\");\n    }\n\n    function tooltipMove(d, i) {\n        if (!settings.enableTooltips) {\n            return;\n        }\n        tooltip.style(\"top\", (d3.event.pageY - 5) + \"px\")\n                .style(\"left\", (d3.event.pageX + 15) + \"px\");\n    }\n\n    function getTooltip(d) {\n        return `<h3 class='tip-title'>${settings.getTooltipTitle(d)}</h3><p>${settings.getTooltipText(d)}</p>`;\n    }\n\n    function getTooltipTitle(d) {\n        return d.name;\n    }\n\n    function getTooltipText(d) {\n        return `${d.data.count} hits`;\n    }\n\n        /*\n         * Returns the readable text color based on the brightness of a given backgroud color\n         */\n    function getReadableColorFor(color) {\n        let textColor = \"#000\";\n        try {\n            textColor = brightness(d3.rgb(color)) < 125 ? \"#eee\" : \"#000\";\n        } catch (err) { /* go on */ }\n        return textColor;\n    }\n\n        /*\n         * Returns the brightness of an rgb-color\n         * from: http:// www.w3.org/WAI/ER/WD-AERT/#color-contrast\n         */\n    function brightness(rgb) {\n        return rgb.r * 0.299 + rgb.g * 0.587 + rgb.b * 0.114;\n    }\n\n    class TreemapNode extends Node {\n        static new(node = {}) {\n            return new TreemapNode(node);\n        }\n\n        static createNode(node) {\n            return Node.createNode(node, TreemapNode.new);\n        }\n        }\n\n\n        /** ************* Public methods ***************/\n        /**\n         * Resets the treemap to its initial position\n         */\n    that.reset = function reset() {\n        reroot(root);\n    };\n\n        /**\n         * Sets the visualisation in full screen mode\n         *\n         * @param <boolean> isFullScreen indicates if we're in full screen mode\n         */\n    that.setFullScreen = function setFullScreen(isFullScreen) {\n            // the delay is because the event fires before we're in fullscreen\n            // so the height en width functions don't give a correct result\n            // without the delay\n        setTimeout(function () {\n            let [w, h] = [settings.width, settings.height];\n            if (isFullScreen) {\n                w = $(window).width();\n                h = $(window).height() - 44;\n            }\n            resize(w, h);\n        }, 1000);\n    };\n\n        // initialize the object\n    init();\n\n    return that;\n}\n\nfunction Plugin(userData, option) {\n    return this.each(function () {\n        let $this = $(this);\n        let data = $this.data(\"vis.treemap\");\n        let options = $.extend({}, $this.data(), typeof option === \"object\" && option);\n\n        if (!data) {\n            $this.data(\"vis.treemap\", (data = new TreeMap(this, userData, options)));\n        }\n        if (typeof option === \"string\") {\n            data[option]();\n        }\n    });\n}\n\n$.fn.treemap = Plugin;\n$.fn.treemap.Constructor = TreeMap;\n\n\n\n// WEBPACK FOOTER //\n// ./src/treemap.js"],"sourceRoot":""}