{"version":3,"sources":["webpack:///webpack/bootstrap 22be41cca05719487158","webpack:///./src/index.js","webpack:///./src/treeview/treeview.js","webpack:///./src/treeview/treeviewNode.js","webpack:///./src/shared/node.js","webpack:///./src/treemap/treemap.js","webpack:///./src/treemap/treemapNode.js","webpack:///./src/sunburst/sunburst.js","webpack:///./src/sunburst/sunburstNode.js"],"names":["TreeView","element","data","options","that","MARGIN","top","right","bottom","left","DURATION","COLOR_SCALE","d3","scale","category10","DEFAULTS","height","width","nodeDistance","levelsToExpand","minNodeSize","maxNodeSize","countAccessor","d","count","colors","name","nodeFillColor","nodeStrokeColor","linkStrokeColor","enableInnerArcs","enableExpandOnClick","enableRightClick","enableLabels","getLabel","enableTooltips","getTooltip","getTooltipTitle","getTooltipText","settings","visibleRoot","tooltipTimer","nodeId","root","tree","tooltip","diagonal","widthScale","innerArc","zoomListener","svg","init","initTooltip","initInnerArcs","layout","nodeSize","separation","a","b","distance","parent","projection","y","x","linear","range","behavior","zoom","scaleExtent","on","attr","event","translate","select","append","call","draw","createNode","id","style","arcScale","Math","PI","arc","outerRadius","startAngle","endAngle","self_count","domain","x0","y0","setSelected","children","forEach","i","color","functor","setRecursiveProperty","collapseAll","expand","expandAll","update","centerNode","source","nodes","reverse","links","depth","node","selectAll","nodeEnter","enter","click","tooltipIn","tooltipOut","rightClick","isLeaf","text","nodeUpdate","transition","duration","_children","nodeExit","exit","remove","link","target","insert","o","selected","defaultPrevented","shiftKey","collapse","reroot","preventDefault","html","pageY","pageX","setTimeout","clearTimeout","reset","Plugin","userData","option","each","$this","$","extend","fn","treeview","Constructor","TreeviewNode","setCount","reduce","sum","c","value","length","new","Node","property","_height","undefined","max","getHeight","_depth","getDepth","construct","map","n","TreeMap","className","levels","getLevel","rerootCallback","getBreadcrumbTooltip","colorRoot","colorLeaf","colorBreadcrumbs","labelHeight","current","treemapLayout","breadcrumbs","treemap","colorScale","initCSS","elementClass","addClass","prop","appendTo","empty","size","padding","interpolate","interpolateLab","setBreadcrumbs","crumbs","temp","push","triggerCallback","getReadableColorFor","tooltipMove","order","position","dx","dy","resize","textColor","brightness","rgb","err","r","g","setFullScreen","isFullScreen","w","h","window","TreemapNode","Sunburst","COLORS","FIXED_COLORS","breadcrumbWidth","radius","fixedColors","useFixedColors","colorCounter","path","currentMaxLevel","addEmptyChildren","redraw","vis","partition","textEnter","sort","min","innerRadius","colour","split","getComputedTextLength","arcTween","my","maxY","xd","yd","yr","t","shift","breadArc","bc","rank","round","attrTween","e","isParentOf","multiline","angle","rotate","p","some","abs","stringHash","colours","hsl","singleChild","s","l","getColor","charCodeAt","redrawColors","sunburst","SunburstNode"],"mappings":"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","file":"unipept-visualizations.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 22be41cca05719487158","import TreeView from \"./treeview/treeview\";\nimport TreeMap from \"./treemap/treemap\";\nimport Sunburst from \"./sunburst/sunburst\";\n\n\n\n// WEBPACK FOOTER //\n// ./src/index.js","/**\n * Zoomable treeview, inspiration from\n * - http://bl.ocks.org/mbostock/4339083\n * - https://gist.github.com/robschmuecker/7880033\n * - http://www.brightpointinc.com/interactive/budget/index.html?source=d3js\n */\nimport TreeviewNode from \"./treeviewNode\";\n\nexport default function TreeView(element, data, options = {}) {\n    let that = {};\n\n    const MARGIN = {\n            top: 5,\n            right: 5,\n            bottom: 5,\n            left: 5,\n        },\n        DURATION = 750,\n        COLOR_SCALE = d3.scale.category10(),\n        DEFAULTS = {\n            height: 300,\n            width: 600,\n            nodeDistance: 180,\n            levelsToExpand: 2,\n            minNodeSize: 2,\n            maxNodeSize: 105,\n\n            countAccessor: d => d.data.count,\n\n            colors: d => COLOR_SCALE(d.name),\n            nodeFillColor: nodeFillColor,\n            nodeStrokeColor: nodeStrokeColor,\n            linkStrokeColor: linkStrokeColor,\n\n            enableInnerArcs: true,\n            enableExpandOnClick: true,\n            enableRightClick: true,\n\n            enableLabels: true,\n            getLabel: d => d.name,\n\n            enableTooltips: true,\n            getTooltip: getTooltip,\n            getTooltipTitle: getTooltipTitle,\n            getTooltipText: getTooltipText,\n        };\n\n    let settings;\n\n    let visibleRoot,\n        tooltipTimer;\n\n    let nodeId = 0,\n        root;\n\n    let tree,\n        tooltip,\n        diagonal,\n        widthScale,\n        innerArc,\n        zoomListener,\n        svg;\n\n    function init() {\n        settings = Object.assign({}, DEFAULTS, options);\n        TreeviewNode.settings = settings;\n\n        settings.width = settings.width - MARGIN.right - MARGIN.left;\n        settings.height = settings.height - MARGIN.top - MARGIN.bottom;\n\n        if (settings.enableTooltips) {\n            initTooltip();\n        }\n\n        if (settings.enableInnerArcs) {\n            initInnerArcs();\n        }\n\n        tree = d3.layout.tree()\n                .nodeSize([2, 10])\n                .separation((a, b) => {\n                    let width = (nodeSize(a) + nodeSize(b)),\n                        distance = width / 2 + 4;\n                    return (a.parent === b.parent) ? distance : distance + 4;\n                });\n\n        diagonal = d3.svg.diagonal().projection(d => [d.y, d.x]);\n\n        widthScale = d3.scale.linear().range([settings.minNodeSize, settings.maxNodeSize]);\n\n            // define the zoomListener which calls the zoom function on the \"zoom\" event constrained within the scaleExtents\n        zoomListener = d3.behavior.zoom()\n                .scaleExtent([0.1, 3])\n                .on(\"zoom\", () => {\n                    svg.attr(\"transform\", `translate(${d3.event.translate})scale(${d3.event.scale})`);\n                });\n\n        svg = d3.select(element).append(\"svg\")\n                .attr(\"version\", \"1.1\")\n                .attr(\"xmlns\", \"http://www.w3.org/2000/svg\")\n                .attr(\"viewBox\", `0 0 ${settings.width + MARGIN.right + MARGIN.left} ${settings.height + MARGIN.top + MARGIN.bottom}`)\n                .attr(\"width\", settings.width + MARGIN.right + MARGIN.left)\n                .attr(\"height\", settings.height + MARGIN.top + MARGIN.bottom)\n                .call(zoomListener)\n                .append(\"g\")\n                .attr(\"transform\", `translate(${MARGIN.left},${MARGIN.top})`)\n                .append(\"g\");\n\n        draw(TreeviewNode.createNode(data));\n    }\n\n    function initTooltip() {\n        tooltip = d3.select(\"body\")\n                .append(\"div\")\n                .attr(\"id\", element.id + \"-tooltip\")\n                .attr(\"class\", \"tip\")\n                .style(\"position\", \"absolute\")\n                .style(\"z-index\", \"10\")\n                .style(\"visibility\", \"hidden\")\n                .style(\"background-color\", \"white\")\n                .style(\"padding\", \"2px\")\n                .style(\"border\", \"1px solid #dddddd\")\n                .style(\"border-radius\", \"3px;\");\n    }\n\n    function initInnerArcs() {\n        let arcScale = d3.scale.linear().range([0, 2 * Math.PI]);\n\n        innerArc = d3.svg.arc()\n                .outerRadius(nodeSize)\n                .startAngle(0)\n                .endAngle(d => arcScale(d.data.self_count / d.data.count) || 0);\n    }\n\n    function draw(data) {\n        widthScale.domain([0, data.data.count]);\n\n        root = data;\n        root.x0 = settings.height / 2;\n        root.y0 = 0;\n\n            // set everything visible\n        root.setSelected(true);\n\n        root.children.forEach((d, i) => {\n            d.color = d3.functor(settings.colors).call(this, d, i);\n            d.setRecursiveProperty(\"color\", d.color);\n        });\n\n        if (settings.enableExpandOnClick) {\n            root.collapseAll();\n            root.expand();\n        } else {\n            root.expandAll();\n        }\n\n        update(root);\n        centerNode(root);\n    }\n\n    function update(source) {\n            // Compute the new tree layout.\n        let nodes = tree.nodes(root).reverse(),\n            links = tree.links(nodes);\n\n            // Normalize for fixed-depth.\n        nodes.forEach(d => {\n            d.y = d.depth * settings.nodeDistance;\n        });\n\n            // Update the nodes…\n        let node = svg.selectAll(\"g.node\")\n                .data(nodes, d => d.id || (d.id = ++nodeId));\n\n            // Enter any new nodes at the parent's previous position.\n        let nodeEnter = node.enter().append(\"g\")\n                .attr(\"class\", \"node\")\n                .style(\"cursor\", \"pointer\")\n                .attr(\"transform\", d => `translate(${source.y || 0},${source.x0 || 0})`)\n                .on(\"click\", click)\n                .on(\"mouseover\", tooltipIn)\n                .on(\"mouseout\", tooltipOut)\n                .on(\"contextmenu\", rightClick);\n\n        nodeEnter.append(\"circle\")\n                .attr(\"r\", 1e-6)\n                .style(\"stroke-width\", \"1.5px\")\n                .style(\"stroke\", settings.nodeStrokeColor)\n                .style(\"fill\", settings.nodeFillColor);\n\n        if (settings.enableInnerArcs) {\n            nodeEnter.append(\"path\")\n                    .attr(\"d\", innerArc)\n                    .style(\"fill\", settings.nodeStrokeColor)\n                    .style(\"fill-opacity\", 0);\n        }\n\n        if (settings.enableLabels) {\n            nodeEnter.append(\"text\")\n                    .attr(\"x\", d => d.isLeaf() ? 10 : -10)\n                    .attr(\"dy\", \".35em\")\n                    .attr(\"text-anchor\", d => d.isLeaf() ? \"start\" : \"end\")\n                    .text(settings.getLabel)\n                    .style(\"font\", \"10px sans-serif\")\n                    .style(\"fill-opacity\", 1e-6);\n        }\n\n            // Transition nodes to their new position.\n        let nodeUpdate = node.transition()\n                .duration(DURATION)\n                .attr(\"transform\", d => `translate(${d.y},${d.x})`);\n\n        nodeUpdate.select(\"circle\")\n                .attr(\"r\", nodeSize)\n                .style(\"fill-opacity\", d => d._children ? 1 : 0)\n                .style(\"stroke\", settings.nodeStrokeColor)\n                .style(\"fill\", settings.nodeFillColor);\n\n        if (settings.enableLabels) {\n            nodeUpdate.select(\"text\")\n                    .style(\"fill-opacity\", 1);\n        }\n\n        if (settings.enableInnerArcs) {\n            nodeUpdate.select(\"path\")\n                    .duration(DURATION)\n                    .attr(\"d\", innerArc)\n                    .style(\"fill-opacity\", 0.8);\n        }\n\n            // Transition exiting nodes to the parent's new position.\n        let nodeExit = node.exit().transition()\n                .duration(DURATION)\n                .attr(\"transform\", d => `translate(${source.y},${source.x})`)\n                .remove();\n\n        nodeExit.select(\"circle\")\n                .attr(\"r\", 1e-6);\n\n        nodeExit.select(\"path\")\n                .style(\"fill-opacity\", 1e-6);\n\n        nodeExit.select(\"text\")\n                .style(\"fill-opacity\", 1e-6);\n\n            // Update the links…\n        let link = svg.selectAll(\"path.link\")\n                .data(links, d => d.target.id);\n\n            // Enter any new links at the parent's previous position.\n        link.enter().insert(\"path\", \"g\")\n                .attr(\"class\", \"link\")\n                .style(\"fill\", \"none\")\n                .style(\"stroke-opacity\", \"0.5\")\n                .style(\"stroke-linecap\", \"round\")\n                .style(\"stroke\", settings.linkStrokeColor)\n                .style(\"stroke-width\", 1e-6)\n                .attr(\"d\", d => {\n                    let o = {\n                        x: (source.x0 || 0),\n                        y: (source.y0 || 0),\n                    };\n                    return diagonal({\n                        source: o,\n                        target: o,\n                    });\n                });\n\n            // Transition links to their new position.\n        link.transition()\n                .duration(DURATION)\n                .attr(\"d\", diagonal)\n                .style(\"stroke\", settings.linkStrokeColor)\n                .style(\"stroke-width\", d => {\n                    if (d.source.selected) {\n                        return widthScale(d.target.data.count) + \"px\";\n                    } else {\n                        return \"4px\";\n                    }\n                });\n\n            // Transition exiting nodes to the parent's new position.\n        link.exit().transition()\n                .duration(DURATION)\n                .style(\"stroke-width\", 1e-6)\n                .attr(\"d\", d => {\n                    let o = {\n                        x: source.x,\n                        y: source.y,\n                    };\n                    return diagonal({\n                        source: o,\n                        target: o,\n                    });\n                })\n                .remove();\n\n            // Stash the old positions for transition.\n        nodes.forEach(d => {\n            [d.x0, d.y0] = [d.x, d.y];\n        });\n    }\n\n    function nodeSize(d) {\n        if (d.selected) {\n            return widthScale(d.data.count) / 2;\n        } else {\n            return 2;\n        }\n    }\n\n        // Toggle children on click.\n    function click(d) {\n        if (!settings.enableExpandOnClick) {\n            return;\n        }\n\n            // check if click is triggered by panning on a node\n        if (d3.event.defaultPrevented) {\n            return;\n        }\n\n        if (d3.event.shiftKey) {\n            d.expandAll();\n        } else if (d.children) {\n            d.collapse();\n        } else {\n            d.expand();\n        }\n        update(d);\n        centerNode(d);\n    }\n\n    function rightClick(d) {\n        if (settings.enableRightClick) {\n            reroot(d);\n        }\n    }\n\n        // Sets the width of the right clicked node to 100%\n    function reroot(d) {\n        if (d === visibleRoot && d !== root) {\n            reroot(root);\n            return;\n        }\n        visibleRoot = d;\n\n            // set Selection properties\n        root.setSelected(false);\n        d.setSelected(true);\n\n            // scale the lines\n        widthScale.domain([0, d.data.count]);\n\n        d.expand();\n\n            // redraw\n        if (d3.event !== null) {\n            d3.event.preventDefault();\n        }\n        update(d);\n        centerNode(d);\n    }\n\n        // Center a node\n    function centerNode(source) {\n        let scale = zoomListener.scale(),\n            [x, y] = [-source.y0, -source.x0];\n        x = x * scale + settings.width / 4;\n        y = y * scale + settings.height / 2;\n        svg.transition()\n                .duration(DURATION)\n                .attr(\"transform\", `translate(${x},${y})scale(${scale})`);\n        zoomListener.scale(scale);\n        zoomListener.translate([x, y]);\n    }\n\n        // tooltip functions\n    function tooltipIn(d, i) {\n        if (!settings.enableTooltips) {\n            return;\n        }\n        tooltip.html(settings.getTooltip(d))\n                .style(\"top\", (d3.event.pageY - 5) + \"px\")\n                .style(\"left\", (d3.event.pageX + 15) + \"px\");\n\n        tooltipTimer = setTimeout(() => {\n            tooltip.style(\"visibility\", \"visible\");\n        }, 1000);\n    }\n\n    function tooltipOut(d, i) {\n        if (!settings.enableTooltips) {\n            return;\n        }\n        clearTimeout(tooltipTimer);\n        tooltip.style(\"visibility\", \"hidden\");\n    }\n\n        /** ************ Default methods ***************/\n        // set fill color\n    function nodeFillColor(d) {\n        if (d.selected) {\n            return d._children ? d.color || \"#aaa\" : \"#fff\";\n        } else {\n            return \"#aaa\";\n        }\n    }\n\n        // set node stroke color\n    function nodeStrokeColor(d) {\n        if (d.selected) {\n            return d.color || \"#aaa\";\n        } else {\n            return \"#aaa\";\n        }\n    }\n\n        // set link stroke color\n    function linkStrokeColor(d) {\n        if (d.source.selected) {\n            return d.target.color;\n        } else {\n            return \"#aaa\";\n        }\n    }\n\n    function getTooltip(d) {\n        return `<h3 class='tip-title'>${settings.getTooltipTitle(d)}</h3><p>${settings.getTooltipText(d)}</p>`;\n    }\n\n    function getTooltipTitle(d) {\n        return d.name;\n    }\n\n    function getTooltipText(d) {\n        return `${d.data.count} hits`;\n    }\n\n        /** ************* Public methods ***************/\n    that.reset = function reset() {\n        zoomListener.scale(1);\n        reroot(root);\n    };\n\n        // initialize the object\n    init();\n\n        // return the object\n    return that;\n}\n\nfunction Plugin(userData, option) {\n    return this.each(function () {\n        let $this = $(this);\n        let data = $this.data(\"vis.treeview\");\n        let options = $.extend({}, $this.data(), typeof option === \"object\" && option);\n\n        if (!data) {\n            $this.data(\"vis.treeview\", (data = new TreeView(this, userData, options)));\n        }\n        if (typeof option === \"string\") {\n            data[option]();\n        }\n    });\n}\n\n$.fn.treeview = Plugin;\n$.fn.treeview.Constructor = TreeView;\n\n\n\n// WEBPACK FOOTER //\n// ./src/treeview/treeview.js","import Node from \"../shared/node\";\n\nexport default class TreeviewNode extends Node {\n    constructor(node = {}) {\n        super(node);\n        this.settings = TreeviewNode.settings;\n        this.setCount();\n    }\n\n    static new(node = {}) {\n        return new TreeviewNode(node);\n    }\n\n    static createNode(node) {\n        return Node.createNode(node, TreeviewNode.new);\n    }\n\n    setCount() {\n        if (this.settings.countAccessor(this)) {\n            this.data.count = this.settings.countAccessor(this);\n        } else if (this.children) {\n            this.data.count = this.children.reduce((sum, c) => sum + c.data.count, 0);\n        } else {\n            this.data.count = 0;\n        }\n    }\n\n    setSelected(value) {\n        this.setRecursiveProperty(\"selected\", value);\n    }\n\n        // collapse everything\n    collapseAll() {\n        if (this.children && this.children.length === 0) {\n            this.children = null;\n        }\n        if (this.children) {\n            this._children = this.children;\n            this._children.forEach(c => {\n                c.collapseAll();\n            });\n            this.children = null;\n        }\n    }\n\n        // Collapses a node\n    collapse() {\n        if (this.children) {\n            this._children = this.children;\n            this.children = null;\n        }\n    }\n\n    expandAll() {\n        this.expand(100);\n    }\n\n        // Expands a node and its children\n    expand(i = this.settings.levelsToExpand) {\n        if (i > 0) {\n            if (this._children) {\n                this.children = this._children;\n                this._children = null;\n            }\n            if (this.children) {\n                this.children.forEach(c => {\n                    c.expand(i - 1);\n                });\n            }\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/treeview/treeviewNode.js","export default class Node {\n    constructor(node = {}) {\n        this.data = {};\n        Object.assign(this, node);\n    }\n\n    static new(node = {}) {\n        return new Node(node);\n    }\n\n    static createNode(node, construct = Node.new) {\n        if (node.children) {\n            node.children = node.children.map(\n                n => Node.createNode(n, construct)\n            );\n        }\n        return construct.call(null, node);\n    }\n\n    // sets a property for a node and all its children\n    setRecursiveProperty(property, value) {\n        this[property] = value;\n        if (this.children) {\n            this.children.forEach(c => {\n                c.setRecursiveProperty(property, value);\n            });\n        } else if (this._children) {\n            this._children.forEach(c => {\n                c.setRecursiveProperty(property, value);\n            });\n        }\n    }\n\n    // Returns true if a node is a leaf\n    isLeaf() {\n        return (!this.children && !this._children) ||\n            (this.children && this.children.length === 0) ||\n            (this._children && this._children.length === 0);\n    }\n\n    getHeight() {\n        if (this._height === undefined) {\n            if (this.isLeaf()) {\n                this._height = 0;\n            } else {\n                this._height = d3.max(this.children, c => c.getHeight()) + 1;\n            }\n        }\n        return this._height;\n    }\n\n    getDepth() {\n        if (this._depth === undefined) {\n            if (this.parent === undefined) {\n                this._depth = 0;\n            } else {\n                this._depth = this.parent.getDepth() + 1;\n            }\n        }\n        return this._depth;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/shared/node.js","/**\n * Interactive treemap\n */\nimport TreemapNode from \"./treemapNode\";\n\nexport default function TreeMap(element, data, options = {}) {\n    let that = {};\n\n    const MARGIN = {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n        },\n        DEFAULTS = {\n            height: 300,\n            width: 600,\n\n            className: \"unipept-treemap\",\n            levels: undefined,\n            getLevel: d => d.getDepth(),\n\n            countAccessor: d => d.data.self_count,\n            rerootCallback: undefined,\n\n            getBreadcrumbTooltip: d => d.name,\n            colorRoot: \"#104B7D\",\n            colorLeaf: \"#fdffcc\",\n            colorBreadcrumbs: \"#FF8F00\",\n\n            labelHeight: 10,\n            getLabel: d => d.name,\n\n            enableTooltips: true,\n            getTooltip: getTooltip,\n            getTooltipTitle: getTooltipTitle,\n            getTooltipText: getTooltipText,\n        };\n\n    let settings;\n\n    let root,\n        nodeId = 0,\n        current,\n        treemapLayout,\n        breadcrumbs,\n        treemap,\n        tooltip,\n        colorScale;\n\n        /**\n         * Initializes Treemap\n         */\n    function init() {\n        settings = Object.assign({}, DEFAULTS, options);\n\n        root = TreemapNode.createNode(data);\n\n        settings.width = settings.width - MARGIN.right - MARGIN.left;\n        settings.height = settings.height - MARGIN.top - MARGIN.bottom;\n\n        settings.levels = settings.levels || root.getHeight();\n\n        if (settings.enableTooltips) {\n            initTooltip();\n        }\n\n        initCSS();\n\n            // setup the visualisation\n        draw(root);\n        reroot(root, false);\n    }\n\n    function initTooltip() {\n        tooltip = d3.select(\"body\")\n                .append(\"div\")\n                .attr(\"id\", element.id + \"-tooltip\")\n                .attr(\"class\", \"tip\")\n                .style(\"position\", \"absolute\")\n                .style(\"z-index\", \"10\")\n                .style(\"visibility\", \"hidden\")\n                .style(\"background-color\", \"white\")\n                .style(\"padding\", \"2px\")\n                .style(\"border\", \"1px solid #dddddd\")\n                .style(\"border-radius\", \"3px;\");\n    }\n\n    function initCSS() {\n        let elementClass = settings.className;\n        $(element).addClass(elementClass);\n        $(\"<style>\").prop(\"type\", \"text/css\")\n                .html(`\n                    .${elementClass} {\n                        font-family: Roboto,'Helvetica Neue',Helvetica,Arial,sans-serif;\n                    }\n                    .${elementClass} .node {\n                        font-size: 9px;\n                        line-height: 10px;\n                        overflow: hidden;\n                        position: absolute;\n                        text-indent: 2px;\n                        text-align: center;\n                        text-overflow: ellipsis;\n                        cursor: pointer;\n                    }\n                    .${elementClass} .node:hover {\n                        outline: 1px solid white;\n                    }\n                    .${elementClass} .breadcrumbs {\n                        font-size: 11px;\n                        line-height: 20px;\n                        padding-left: 5px;\n                        font-weight: bold;\n                        color: white;\n                        box-sizing: border-box;\n                    }\n                    .full-screen .${elementClass} .breadcrumbs {\n                        width: 100% !important;\n                    }\n                    .${elementClass} .crumb {\n                        cursor: pointer;\n                    }\n                    .${elementClass} .crumb .link:hover {\n                        text-decoration: underline;\n                    }\n                    .${elementClass} .breadcrumbs .crumb + .crumb::before {\n                        content: \" > \";\n                        cursor: default;\n                    }\n                `)\n                .appendTo(\"head\");\n    }\n\n    function draw(data) {\n        $(element).empty();\n\n        treemapLayout = d3.layout.treemap()\n                .size([settings.width + 1, settings.height + 1])\n                .padding([settings.labelHeight, 0, 0, 0])\n                .value(settings.countAccessor);\n\n        colorScale = d3.scale.linear()\n                .domain([0, settings.levels])\n                .range([settings.colorRoot, settings.colorLeaf])\n                .interpolate(d3.interpolateLab);\n\n        breadcrumbs = d3.select(element).append(\"div\")\n                .attr(\"class\", \"breadcrumbs\")\n                .style(\"position\", \"relative\")\n                .style(\"width\", settings.width + \"px\")\n                .style(\"height\", \"20px\")\n                .style(\"background-color\", settings.colorBreadcrumbs);\n\n        treemap = d3.select(element).append(\"div\")\n                .style(\"position\", \"relative\")\n                .style(\"width\", settings.width + \"px\")\n                .style(\"height\", settings.height + \"px\")\n                .style(\"left\", MARGIN.left + \"px\")\n                .style(\"top\", MARGIN.top + \"px\");\n    }\n\n    function setBreadcrumbs() {\n        let crumbs = [];\n        let temp = current;\n        while (temp) {\n            crumbs.push(temp);\n            temp = temp.parent;\n        }\n        crumbs.reverse();\n        breadcrumbs.html(\"\");\n        breadcrumbs.selectAll(\".crumb\")\n                .data(crumbs)\n                .enter()\n                .append(\"span\")\n                .attr(\"class\", \"crumb\")\n                .attr(\"title\", settings.getBreadcrumbTooltip)\n                .html(d => `<span class='link'>${d.name}</span>`)\n                .on(\"click\", d => {\n                    reroot(d);\n                });\n    }\n\n    function reroot(data, triggerCallback = true) {\n        current = data;\n\n        setBreadcrumbs();\n\n        let nodes = treemap.selectAll(\".node\")\n                .data(treemapLayout.nodes(data), d => d.id || (d.id = ++nodeId));\n\n        nodes.enter()\n                .append(\"div\")\n                .attr(\"class\", \"node\")\n                .style(\"background\", d => colorScale(settings.getLevel(d)))\n                .style(\"color\", d => getReadableColorFor(colorScale(settings.getLevel(d))))\n                .style(\"left\", \"0px\")\n                .style(\"top\", \"0px\")\n                .style(\"width\", \"0px\")\n                .style(\"height\", \"0px\")\n                .text(settings.getLabel)\n                .on(\"click\", d => {\n                    reroot(d);\n                })\n                .on(\"contextmenu\", d => {\n                    d3.event.preventDefault();\n                    if (current.parent) {\n                        reroot(current.parent);\n                    }\n                })\n                .on(\"mouseover\", tooltipIn)\n                .on(\"mousemove\", tooltipMove)\n                .on(\"mouseout\", tooltipOut);\n\n        nodes.order()\n                .transition()\n                .call(position);\n\n        nodes.exit().remove();\n\n        if (triggerCallback && settings.rerootCallback) {\n            settings.rerootCallback.call(null, current);\n        }\n    }\n\n    function update() {\n        let nodes = treemap.selectAll(\".node\")\n                .data(treemapLayout.nodes(data), d => d.id)\n                .order()\n                .transition()\n                .call(position);\n    }\n\n        /**\n         * sets the position of a square\n         */\n    function position() {\n        this.style(\"left\", d => d.x + \"px\")\n                .style(\"top\", d => d.y + \"px\")\n                .style(\"width\", d => Math.max(0, d.dx - 1) + \"px\")\n                .style(\"height\", d => Math.max(0, d.dy - 1) + \"px\");\n    }\n\n        /**\n         * Resizes the treemap for a given width and height\n         */\n    function resize(width, height) {\n        treemapLayout = d3.layout.treemap()\n                .size([width + 1, height + 1])\n                .padding([10, 0, 0, 0])\n                .value(settings.countAccessor);\n        update();\n    }\n\n        // tooltip functions\n    function tooltipIn(d, i) {\n        if (!settings.enableTooltips) {\n            return;\n        }\n        tooltip.html(settings.getTooltip(d))\n                .style(\"top\", (d3.event.pageY - 5) + \"px\")\n                .style(\"left\", (d3.event.pageX + 15) + \"px\")\n                .style(\"visibility\", \"visible\");\n    }\n\n    function tooltipOut(d, i) {\n        if (!settings.enableTooltips) {\n            return;\n        }\n        tooltip.style(\"visibility\", \"hidden\");\n    }\n\n    function tooltipMove(d, i) {\n        if (!settings.enableTooltips) {\n            return;\n        }\n        tooltip.style(\"top\", (d3.event.pageY - 5) + \"px\")\n                .style(\"left\", (d3.event.pageX + 15) + \"px\");\n    }\n\n    function getTooltip(d) {\n        return `<h3 class='tip-title'>${settings.getTooltipTitle(d)}</h3><p>${settings.getTooltipText(d)}</p>`;\n    }\n\n    function getTooltipTitle(d) {\n        return d.name;\n    }\n\n    function getTooltipText(d) {\n        return `${d.data.count} hits`;\n    }\n\n        /*\n         * Returns the readable text color based on the brightness of a given backgroud color\n         */\n    function getReadableColorFor(color) {\n        let textColor = \"#000\";\n        try {\n            textColor = brightness(d3.rgb(color)) < 125 ? \"#eee\" : \"#000\";\n        } catch (err) { /* go on */ }\n        return textColor;\n    }\n\n        /*\n         * Returns the brightness of an rgb-color\n         * from: http:// www.w3.org/WAI/ER/WD-AERT/#color-contrast\n         */\n    function brightness(rgb) {\n        return rgb.r * 0.299 + rgb.g * 0.587 + rgb.b * 0.114;\n    }\n\n        /** ************* Public methods ***************/\n        /**\n         * Resets the treemap to its initial position\n         */\n    that.reset = function reset() {\n        reroot(root);\n    };\n\n        /**\n         * Sets the visualisation in full screen mode\n         *\n         * @param <boolean> isFullScreen indicates if we're in full screen mode\n         */\n    that.setFullScreen = function setFullScreen(isFullScreen) {\n            // the delay is because the event fires before we're in fullscreen\n            // so the height en width functions don't give a correct result\n            // without the delay\n        setTimeout(function () {\n            let [w, h] = [settings.width, settings.height];\n            if (isFullScreen) {\n                w = $(window).width();\n                h = $(window).height() - 44;\n            }\n            resize(w, h);\n        }, 1000);\n    };\n\n        // initialize the object\n    init();\n\n    return that;\n}\n\nfunction Plugin(userData, option) {\n    return this.each(function () {\n        let $this = $(this);\n        let data = $this.data(\"vis.treemap\");\n        let options = $.extend({}, $this.data(), typeof option === \"object\" && option);\n\n        if (!data) {\n            $this.data(\"vis.treemap\", (data = new TreeMap(this, userData, options)));\n        }\n        if (typeof option === \"string\") {\n            data[option]();\n        }\n    });\n}\n\n$.fn.treemap = Plugin;\n$.fn.treemap.Constructor = TreeMap;\n\n\n\n// WEBPACK FOOTER //\n// ./src/treemap/treemap.js","import Node from \"../shared/node\";\n\nexport default class TreemapNode extends Node {\n    static new(node = {}) {\n        return new TreemapNode(node);\n    }\n\n    static createNode(node) {\n        return Node.createNode(node, TreemapNode.new);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/treemap/treemapNode.js","/**\n * Interactive Sunburst\n */\nimport SunburstNode from \"./sunburstNode\";\n\nexport default function Sunburst(element, data, options = {}) {\n    let that = {};\n\n    const MARGIN = {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0,\n        },\n        COLORS = [\"#f9f0ab\", \"#e8e596\", \"#f0e2a3\", \"#ede487\", \"#efd580\", \"#f1cb82\", \"#f1c298\", \"#e8b598\", \"#d5dda1\", \"#c9d2b5\", \"#aec1ad\", \"#a7b8a8\", \"#b49a3d\", \"#b28647\", \"#a97d32\", \"#b68334\", \"#d6a680\", \"#dfad70\", \"#a2765d\", \"#9f6652\", \"#b9763f\", \"#bf6e5d\", \"#af643c\", \"#9b4c3f\", \"#72659d\", \"#8a6e9e\", \"#8f5c85\", \"#934b8b\", \"#9d4e87\", \"#92538c\", \"#8b6397\", \"#716084\", \"#2e6093\", \"#3a5988\", \"#4a5072\", \"#393e64\", \"#aaa1cc\", \"#e0b5c9\", \"#e098b0\", \"#ee82a2\", \"#ef91ac\", \"#eda994\", \"#eeb798\", \"#ecc099\", \"#f6d5aa\", \"#f0d48a\", \"#efd95f\", \"#eee469\", \"#dbdc7f\", \"#dfd961\", \"#ebe378\", \"#f5e351\"],\n        FIXED_COLORS = [\"#1f77b4\", \"#aec7e8\", \"#ff7f0e\", \"#ffbb78\", \"#2ca02c\", \"#98df8a\", \"#d62728\", \"#ff9896\", \"#9467bd\", \"#c5b0d5\", \"#8c564b\", \"#c49c94\", \"#e377c2\", \"#f7b6d2\", \"#7f7f7f\", \"#c7c7c7\", \"#bcbd22\", \"#dbdb8d\", \"#17becf\", \"#9edae5\", \"#393b79\", \"#5254a3\", \"#6b6ecf\", \"#9c9ede\", \"#637939\", \"#8ca252\", \"#b5cf6b\", \"#cedb9c\", \"#8c6d31\", \"#bd9e39\", \"#e7ba52\", \"#e7cb94\", \"#843c39\", \"#ad494a\", \"#d6616b\", \"#e7969c\", \"#7b4173\", \"#a55194\", \"#ce6dbd\", \"#de9ed6\", \"#3182bd\", \"#6baed6\", \"#9ecae1\", \"#c6dbef\", \"#e6550d\", \"#fd8d3c\", \"#fdae6b\", \"#fdd0a2\", \"#31a354\", \"#74c476\", \"#a1d99b\", \"#c7e9c0\", \"#756bb1\", \"#9e9ac8\", \"#bcbddc\", \"#dadaeb\", \"#636363\", \"#969696\", \"#bdbdbd\", \"#d9d9d9\"],\n        DEFAULTS = {\n            height: 600,\n            width: 600,\n            breadcrumbWidth: 200,\n            radius: 300,\n\n            className: \"unipept-sunburst\",\n            levels: 4,\n            getLevel: d => d.getDepth(),\n\n            duration: 1000,\n            colors: COLORS,\n            fixedColors: FIXED_COLORS,\n            useFixedColors: false,\n\n            countAccessor: d => d.data.self_count,\n            rerootCallback: undefined,\n\n            labelHeight: 10,\n            getLabel: d => d.name,\n\n            enableTooltips: true,\n            getTooltip: getTooltip,\n            getTooltipTitle: getTooltipTitle,\n            getTooltipText: getTooltipText,\n        };\n\n    let settings;\n\n    let colorCounter = -1;\n\n    // components\n    let tooltip,\n        breadcrumbs,\n        path, // the arcs\n        x, // the x-scale\n        y, // the y-scale\n        arc, // the arc function\n        text, // all text nodes\n        currentMaxLevel;\n\n    /** ************* Private methods ***************/\n\n    /**\n     * Initializes Sunburst\n     */\n    function init() {\n        settings = Object.assign({}, DEFAULTS, options);\n\n        settings.width = settings.width - MARGIN.right - MARGIN.left;\n        settings.height = settings.height - MARGIN.top - MARGIN.bottom;\n\n        // prepare data\n        data.children = addEmptyChildren(data.children, data.data.self_count);\n\n        if (settings.enableTooltips) {\n            initTooltip();\n        }\n\n        initCSS();\n\n        // draw everything\n        redraw();\n\n        // fake click on the center node\n        setTimeout(that.reset, 1000);\n    }\n\n    function initTooltip() {\n        tooltip = d3.select(\"body\")\n            .append(\"div\")\n            .attr(\"id\", element.id + \"-tooltip\")\n            .attr(\"class\", \"tip\")\n            .style(\"position\", \"absolute\")\n            .style(\"z-index\", \"10\")\n            .style(\"visibility\", \"hidden\")\n            .style(\"background-color\", \"white\")\n            .style(\"padding\", \"2px\")\n            .style(\"border\", \"1px solid #dddddd\")\n            .style(\"border-radius\", \"3px;\");\n    }\n\n    function initCSS() {\n        let elementClass = settings.className;\n        $(element).addClass(elementClass);\n        $(\"<style>\").prop(\"type\", \"text/css\")\n                .html(`\n.${elementClass} {\n    font-family: Roboto,'Helvetica Neue',Helvetica,Arial,sans-serif;\n    width: ${settings.width + settings.breadcrumbWidth}px;\n}\n.${elementClass} .sunburst-breadcrumbs {\n    width: 176px;\n    float: right;\n    margin-top: 10px;\n    padding-left: 5px;\n}\n.${elementClass} .sunburst-breadcrumbs ul {\n    padding-left: 0;\n    list-style: none;\n}\n.${elementClass} .sunburst-breadcrumbs .crumb {\n    margin-bottom: 5px;\n    cursor: pointer;\n}\n.${elementClass} .sunburst-breadcrumbs .crumb svg {\n    float: left;\n    margin-right: 3px;\n}\n.${elementClass} .sunburst-breadcrumbs .crumb p {\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    margin: 0;\n    font-size: 14px;\n}\n.${elementClass} .sunburst-breadcrumbs .crumb .percentage {\n    font-size: 11px;\n}`)\n                .appendTo(\"head\");\n    }\n\n    /**\n     * Adds data for the peptides on the self level\n     * Is called recursively\n     *\n     * @param <Array> children A list of children\n     * @param <int> count The number of peptides that should be the sum of the\n     *          children count\n     * @return <Array> The modified list of children\n     */\n    function addEmptyChildren(children, count) {\n        let i;\n        for (i = 0; i < children.length; i++) {\n            if (typeof children[i].children !== \"undefined\") {\n                children[i].children = addEmptyChildren(children[i].children, children[i].data.self_count);\n            }\n        }\n        if (children.length > 0 && count !== 0 && count !== undefined) {\n            children.push({\n                id: -1,\n                name: \"empty\",\n                data: {\n                    count: count,\n                    self_count: count,\n                },\n            });\n        }\n        return children;\n    }\n\n    /**\n     * Redraws the pancore graph\n     */\n    function redraw() {\n        let vis, // the visualisation\n            partition, // the partition layout\n            nodes, // the result of the partition layout\n            textEnter; // new text nodes\n\n        // clear everything\n        $(element).empty();\n\n        breadcrumbs = d3.select(element)\n            .append(\"div\")\n                .attr(\"id\", element.id + \"-breadcrumbs\")\n                .attr(\"class\", \"sunburst-breadcrumbs\")\n            .append(\"ul\");\n\n        x = d3.scale.linear().range([0, 2 * Math.PI]); // use full circle\n        y = d3.scale.linear().domain([0, 1]).range([0, settings.radius]);\n        currentMaxLevel = 4;\n\n        vis = d3.select(element)\n            .append(\"svg\")\n            .attr(\"version\", \"1.1\")\n            .attr(\"xmlns\", \"http://www.w3.org/2000/svg\")\n            .attr(\"viewBox\", `0 0 ${settings.width + MARGIN.right + MARGIN.left} ${settings.height + MARGIN.top + MARGIN.bottom}`)\n            .attr(\"width\", settings.width + MARGIN.right + MARGIN.left)\n            .attr(\"height\", settings.height + MARGIN.top + MARGIN.bottom)\n            .attr(\"overflow\", \"hidden\")\n            .style(\"font-family\", \"'Helvetica Neue', Helvetica, Arial, sans-serif\");\n        vis.append(\"style\")\n            .attr(\"type\", \"text/css\")\n            .html(\".hidden{ visibility: hidden;}\");\n        vis = vis.append(\"g\")\n            .attr(\"transform\", \"translate(\" + settings.radius + \",\" + settings.radius + \")\"); // set origin to radius center\n\n        partition = d3.layout.partition() // creates a new partition layout\n            .sort(null) // don't sort,  use tree traversal order\n            .value(d => d.data.self_count); // set the size of the pieces\n\n        // calculate arcs out of partition coordinates\n        arc = d3.svg.arc()\n                .startAngle(d => Math.max(0, Math.min(2 * Math.PI, x(d.x))))\n                .endAngle(d => Math.max(0, Math.min(2 * Math.PI, x(d.x + d.dx))))\n                // prevent y-calculation on 0\n                .innerRadius(d => Math.max(0, d.y ? y(d.y) : d.y))\n                .outerRadius(d => Math.max(0, y(d.y + d.dy)) + 1);\n\n        // run the partition layout\n        nodes = partition.nodes(data);\n\n        path = vis.selectAll(\"path\").data(nodes);\n        path.enter().append(\"path\") // for every node, draw an arc\n            .attr(\"class\", \"arc\")\n            .attr(\"id\", (d, i) => \"path-\" + i) // id based on index\n            .attr(\"d\", arc) // path data\n            .attr(\"fill-rule\", \"evenodd\") // fill rule\n            .style(\"fill\", colour) // call function for colour\n            .on(\"click\", function (d) {\n                if (d.depth < currentMaxLevel) {\n                    click(d);\n                }\n            }) // call function on click\n            .on(\"mouseover\", tooltipIn)\n            .on(\"mousemove\", tooltipMove)\n            .on(\"mouseout\", tooltipOut);\n\n        // put labels on the nodes\n        text = vis.selectAll(\"text\").data(nodes);\n\n        textEnter = text.enter().append(\"text\")\n            .style(\"fill\", d => getReadableColorFor(colour(d)))\n            .style(\"fill-opacity\", 0)\n            .style(\"font-family\", \"font-family: Helvetica, 'Super Sans', sans-serif\")\n            .style(\"pointer-events\", \"none\") // don't invoke mouse events\n            .attr(\"dy\", \".2em\");\n\n        textEnter.append(\"tspan\")\n            .attr(\"x\", 0)\n            .text(d => d.depth && d.name !== \"empty\" ? d.name.split(\" \")[0] : \"\");\n\n        textEnter.append(\"tspan\")\n            .attr(\"x\", 0)\n            .attr(\"dy\", \"1em\")\n            .text(d => d.depth && d.name !== \"empty\" ? d.name.split(\" \")[1] || \"\" : \"\");\n\n        textEnter.append(\"tspan\")\n            .attr(\"x\", 0)\n            .attr(\"dy\", \"1em\")\n            .text(d => d.depth && d.name !== \"empty\" ? d.name.split(\" \")[2] || \"\" : \"\");\n\n        textEnter.style(\"font-size\", function (d) {\n            return Math.min(((settings.radius / settings.levels) / this.getComputedTextLength() * 10) + 1, 12) + \"px\";\n        });\n    }\n\n    /**\n     *  Interpolate the scales!\n     * Defines new scales based on the clicked item\n     *\n     * @param <Object> d The clicked item\n     * @return <Scale> new scales\n     */\n    function arcTween(d) {\n        let my = Math.min(maxY(d), d.y + settings.levels * d.dy),\n            xd = d3.interpolate(x.domain(), [d.x, d.x + d.dx]),\n            yd = d3.interpolate(y.domain(), [d.y, my]),\n            yr = d3.interpolate(y.range(), [d.y ? 20 : 0, settings.radius]);\n        return d => function (t) {\n            x.domain(xd(t));\n            y.domain(yd(t)).range(yr(t));\n            return arc(d);\n        };\n    }\n\n    /**\n     * calculate the max-y of the clicked item\n     *\n     * @param <Object> d The clicked item\n     * @return <Number> The maximal y-value\n     */\n    function maxY(d) {\n        return d.children ? Math.max(...d.children.map(maxY)) : d.y + d.dy;\n    }\n\n    function setBreadcrumbs(d) {\n        // breadcrumbs\n        let crumbs = [];\n        let temp = d;\n        while (temp) {\n            crumbs.push(temp);\n            temp = temp.parent;\n        }\n        crumbs.reverse().shift();\n        let breadArc = d3.svg.arc()\n            .innerRadius(0)\n            .outerRadius(15)\n            .startAngle(0)\n            .endAngle(d => 2 * Math.PI * d.data.count / d.parent.data.count);\n        let bc = breadcrumbs.selectAll(\".crumb\")\n            .data(crumbs);\n        bc.enter()\n            .append(\"li\")\n            .on(\"click\", d => {\n                click(d.parent);\n            })\n            .attr(\"class\", \"crumb\")\n            .style(\"opacity\", \"0\")\n            .attr(\"title\", d => `[${d.data.rank}] ${d.name}`)\n            .html(d => `\n<p class='name'>${d.name}</p>\n<p class='percentage'>${Math.round(100 * d.data.count / d.parent.data.count)}% of ${d.parent.name}</p>`)\n            .insert(\"svg\", \":first-child\").attr(\"width\", 30).attr(\"height\", 30)\n            .append(\"path\").attr(\"d\", breadArc).attr(\"transform\", \"translate(15, 15)\").attr(\"fill\", colour);\n        bc.transition()\n            .duration(settings.duration)\n            .style(\"opacity\", \"1\");\n        bc.exit().transition()\n            .duration(settings.duration)\n            .style(\"opacity\", \"0\")\n            .remove();\n    }\n\n    /**\n     * Defines what happens after a node is clicked\n     *\n     * @param <Object> d The data object of the clicked arc\n     */\n    function click(d) {\n        if (d.name === \"empty\") {\n            return;\n        }\n\n        setBreadcrumbs(d);\n\n        if (settings.rerootCallback) {\n            settings.rerootCallback.call(null, d);\n        }\n\n        // perform animation\n        currentMaxLevel = d.depth + settings.levels;\n        path.transition()\n            .duration(settings.duration)\n            .attrTween(\"d\", arcTween(d))\n            .attr(\"class\", d => d.depth >= currentMaxLevel ? \"arc toHide\" : \"arc\")\n            .attr(\"fill-opacity\", d => d.depth >= currentMaxLevel ? 0.2 : 1);\n\n        // Somewhat of a hack as we rely on arcTween updating the scales.\n        text\n            .style(\"visibility\", function (e) {\n                return isParentOf(d, e) ? null : d3.select(this).style(\"visibility\");\n            })\n            .transition().duration(settings.duration)\n            .attrTween(\"text-anchor\", d => function () {\n                return x(d.x + d.dx / 2) > Math.PI ? \"end\" : \"start\";\n            })\n            .attrTween(\"transform\", function (d) {\n                let multiline = (d.name || \"\").split(\" \").length > 1;\n                return function () {\n                    let angle = x(d.x + d.dx / 2) * 180 / Math.PI - 90,\n                        rotate = angle + (multiline ? -0.5 : 0);\n                    return \"rotate(\" + rotate + \")translate(\" + (y(d.y)) + \")rotate(\" + (angle > 90 ? -180 : 0) + \")\";\n                };\n            })\n            .style(\"fill-opacity\", e => isParentOf(d, e) ? 1 : 1e-6)\n            .each(\"end\", e => {\n                d3.select(this).style(\"visibility\", isParentOf(d, e) ? null : \"hidden\");\n            });\n    }\n\n    /**\n     * Calculates if p is a parent of c\n     * Returns true is label must be drawn\n     */\n    function isParentOf(p, c) {\n        if (c.depth >= currentMaxLevel) {\n            return false;\n        }\n        if (p === c) {\n            return true;\n        }\n        if (p.children) {\n            return p.children.some(function (d) {\n                return isParentOf(d, c);\n            });\n        }\n        return false;\n    }\n\n    /**\n     * Calculates the color of an arc based on the color of his children\n     *\n     * @param <Object> d The node for which we want the color\n     * @return <Color> The calculated color\n     */\n    function colour(d) {\n        if (d.name === \"empty\") {\n            return \"white\";\n        }\n        if (settings.useFixedColors) {\n            switch (d.name) {\n            case \"Bacteria\":\n                return settings.fixedColors[0];\n            case \"Eukaryota\":\n                return settings.fixedColors[1];\n            default:\n                return settings.fixedColors[Math.abs(stringHash(d.name + \" \" + d.data.rank)) % settings.fixedColors.length];\n            }\n        } else {\n            if (d.children) {\n                let colours = d.children.map(colour),\n                    a = d3.hsl(colours[0]),\n                    b = d3.hsl(colours[1]),\n                    singleChild = d.children.length === 1 || d.children[1].name === \"empty\";\n                // if we only have one child, return a slightly darker variant of the child color\n                if (singleChild) {\n                    return d3.hsl(a.h, a.s, a.l * 0.98);\n                }\n                // if we have 2 children or more, take the average of the first two children\n                return d3.hsl((a.h + b.h) / 2, (a.s + b.s) / 2, (a.l + b.l) / 2);\n            }\n            // if we don't have children, pick a new color\n            if (!d.color) {\n                d.color = getColor();\n            }\n            return d.color;\n        }\n    }\n\n    /**\n     * color generation function\n     * iterates over fixed list of colors\n     *\n     * @return <Color> The generated color\n     */\n    function getColor() {\n        colorCounter = (colorCounter + 1) % settings.colors.length;\n        return settings.colors[colorCounter];\n    }\n\n\n    // tooltip functions\n    function tooltipIn(d, i) {\n        if (!settings.enableTooltips) {\n            return;\n        }\n        if (d.depth < currentMaxLevel && d.name !== \"empty\") {\n            tooltip.html(settings.getTooltip(d))\n                .style(\"top\", (d3.event.pageY - 5) + \"px\")\n                .style(\"left\", (d3.event.pageX + 15) + \"px\")\n                .style(\"visibility\", \"visible\");\n        }\n    }\n\n    function tooltipOut(d, i) {\n        if (!settings.enableTooltips) {\n            return;\n        }\n        tooltip.style(\"visibility\", \"hidden\");\n    }\n\n    function tooltipMove(d, i) {\n        if (!settings.enableTooltips) {\n            return;\n        }\n        tooltip.style(\"top\", (d3.event.pageY - 5) + \"px\")\n            .style(\"left\", (d3.event.pageX + 15) + \"px\");\n    }\n\n    function getTooltip(d) {\n        return `<h3 class='tip-title'>${settings.getTooltipTitle(d)}</h3><p>${settings.getTooltipText(d)}</p>`;\n    }\n\n    function getTooltipTitle(d) {\n        return d.name;\n    }\n\n    function getTooltipText(d) {\n        return `${d.data.count} hits`;\n    }\n\n\n    /*\n     * Returns the readable text color based on the brightness of a given backgroud color\n     */\n    function getReadableColorFor(color) {\n        let textColor = \"#000\";\n        try {\n            textColor = brightness(d3.rgb(color)) < 125 ? \"#eee\" : \"#000\";\n        } catch (err) { /* go on */ }\n        return textColor;\n    }\n\n    /*\n     * Returns the brightness of an rgb-color\n     * from: http:// www.w3.org/WAI/ER/WD-AERT/#color-contrast\n     */\n    function brightness(rgb) {\n        return rgb.r * 0.299 + rgb.g * 0.587 + rgb.b * 0.114;\n    }\n\n    /**\n     * Hash function for strings from\n     * http://stackoverflow.com/a/15710692/865696\n     */\n    function stringHash(s) {\n        return s.split(\"\").reduce(function (a, b) {\n            let c = ((a << 5) - a) + b.charCodeAt(0);\n            return c & c;\n        }, 0);\n    }\n\n    /** ************* Public methods ***************/\n\n    /**\n     * Resets the sunburst to its initial position\n     */\n    that.reset = function reset() {\n        click(data);\n    };\n\n    /**\n     * redraws the colors of the sunburst\n     */\n    that.redrawColors = function redrawColors() {\n        d3.selectAll(\".crumb path\").transition()\n            .style(\"fill\", colour);\n        path.transition()\n            .style(\"fill\", colour);\n        text.transition()\n            .style(\"fill\", function (d) {\n                return getReadableColorFor(colour(d));\n            });\n    };\n\n    /**\n     * Sets the visualisation in full screen mode\n     *\n     * @param <boolean> isFullScreen indicates if we're in full screen mode\n     */\n    that.setFullScreen = function setFullScreen(isFullScreen) {\n        // the delay is because the event fires before we're in fullscreen\n        // so the height en width functions don't give a correct result\n        // without the delay\n        setTimeout(function () {\n            let size = 740;\n            if (isFullScreen) {\n                size = Math.min($(window).height() - 44, $(window).width() - 250);\n            }\n            $(element).children(\"svg\")\n                .attr(\"width\", size)\n                .attr(\"height\", size);\n        }, 1000);\n    };\n\n    // initialize the object\n    init();\n\n    return that;\n}\n\nfunction Plugin(userData, option) {\n    return this.each(function () {\n        let $this = $(this);\n        let data = $this.data(\"vis.sunburst\");\n        let options = $.extend({}, $this.data(), typeof option === \"object\" && option);\n\n        if (!data) {\n            $this.data(\"vis.sunburst\", (data = new Sunburst(this, userData, options)));\n        }\n        if (typeof option === \"string\") {\n            data[option]();\n        }\n    });\n}\n\n$.fn.sunburst = Plugin;\n$.fn.sunburst.Constructor = Sunburst;\n\n\n\n// WEBPACK FOOTER //\n// ./src/sunburst/sunburst.js","import Node from \"../shared/node\";\n\nexport default class SunburstNode extends Node {\n    static new(node = {}) {\n        return new SunburstNode(node);\n    }\n\n    static createNode(node) {\n        return Node.createNode(node, SunburstNode.new);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/sunburst/sunburstNode.js"],"sourceRoot":""}